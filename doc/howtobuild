===============================================================
          HOW TO RELEASE A NEW VERSION OF SD

     This file is \wba\sddoc\howtobuild.
        Last modified 19 May 2002.

-----------------------------------------------------------------

                    UPDATING VERSION NUMBERS

Be sure the version numbers and dates are correct in:
    [sd]    sdmain.cpp   (version # is visible)
    [sd]    sd.rc        (SD & UI version #'s are visible in "about" dialog)
    [sd]    sd_calls.txt (version # is visible)
    [sddoc] title.lst    (version # is visible)
    [sddoc] about.lst    (version # is visible)
    [sddoc] sd_doc.txi         (version # and date are visible)
    [sddoc] relnotes.txi       (version #, database format version #,
                               and UI version # are visible.
                               Also, check its claimed database format
                               version against database.h)
    [sddoc] index2.htmli       (version # and date are visible)
             ==> Be sure to run do_index <num> after editing this!!!
    [sddoc] download-unix.html (version # of HP-UX release is visible)

-----------------------------------------------------------------

                       BEFORE STARTING

BEWARE!!!!!

MANY OPERATIONS REQUIRE A LOCAL ACCOUNT!!!
THESE INCLUDE ALL DOCUMENT PREPARATION, AND THE DO_LINUX SCRIPT.

LOG OUT OF THE NETWORK ACCOUNT!!!!!   LOG IN IN THE LOCAL DOMAIN!!!!


Do "clean clean" in sddoc.  This deletes all the derived documentation
files, the self-extracting .exe files, and the ".zip" and ".msg"
files used for uploading to the web.

Then choose the poster child.  Do "do_index <number>".

-----------------------------------------------------------------

               BUILDING THE DOCUMENTATION

It is important that this be done before "new_binary" is run, because
the manual is now wrapped into the binary distribution file.

LOG OUT OF THE NETWORK ACCOUNT!!!!!   LOG IN IN THE LOCAL DOMAIN!!!!

BE SURE THAT THE "CYGWIN" LIBRARY IS IN THE PATH!!!
Do "setcygwin" or "setcygnus" as appropriate.
The "uufix" program requires it.  Not to mention "make".

Go to sddoc directory and do:

    do_plain
    do_ps
    do_pdf
    do_index <poster-child-number>
            (It is important that a poster child number
             always be loaded before running "do_html")
    do_html
    do_download-unix   (at MPG, if HP-UX release is desired, see below)
    do_hpux            (at MPG, if HP-UX release is desired, see below)

-----------------------------------------------------------------
                POSTER CHILD LOG
10 Jun 00  -  21 Aug 00   #4
21 Aug 00  -  14 Sep 00   #5
14 Sep 00  -  09 Oct 00   #8
09 Oct 00  -  11 Dec 00   #9
11 Dec 00  -  19 Feb 01   #7
19 Feb 01  -  12 Mar 01  #10
12 Mar 01  -  27 May 01  #11
27 May 01  -  16 Sep 01   #5
16 Sep 01  -  7  Apr 02  #14
7  Apr 02  -  30 Apr 02  #15
30 Apr 02  -  15 May 02  #12
15 May 02  -  15 Jul 02  #16
15 Jul 02  -  1  Sep 02  #17
1  Sep 02  -             #18
-----------------------------------------------------------------

               TESTING AND PRODUCTION BUILD - DJGPP

This is not done any more .....
###   Build and test the optimized version from GCC:
###       setopt
###       [del *.o if necessary to force build]
###       make
###       cd regress
###       del *.tmp
###       doit
If this is done, do not distribute this.  It stinks.

Build and test the optimized version from DJGPP.
This should be done on Windows NT4.0, not Windows 2000 or any similar
abomination.  Micro$oft has broken NTVDM.EXE in Windows 2000, so it
frequently crashes while running DJGPP.  Restarting the "make" operation
each time it crashes has been observed to result in a successful
compilation.
    setdjgpp
    [del *.o if necessary to force build]
    make
    cd regress
    del *.tmp
    doit

(By the way, this test appears to take 10 hours!!!)

BE SURE THAT MKCALLS GOT BUILT BY DJGPP!!!

Now give the command "do_binary3" (in sddoc) to save the DJGPP build for
Windows 3.1.

               TESTING AND PRODUCTION BUILD - MSVC++

EXIT FROM THIS SHELL!!!!!  The environment from "setdjgpp" must be destroyed.

    Delete any upper-case MKCALLS.EXE, SDTTY.EXE, and SD_CALLS_DAT left over
    from DJGPP, so that MSVC++ will create them in lower case.
    This also prevents distribution of the wrong stuff.

    Set project configuration to "sdtty release", "sd release", "deploy release",
    and "mkcalls release", issuing "build / rebuild all" in each case.

BE SURE THAT MKCALLS GOT BUILT BY MSVC++!!

BE SURE THAT UPPER-CASE FILES WERE DELETED!!

BE SURE THAT THIS WAS THE LAST BUILD BEFORE MAKING NORMAL "new_binary" RELEASE!!!
BUILD SD, SDTTY, AND MKCALLS UNDER MSVC++.

Now run mkcalls.

Then do the usual:
    cd regress
    del *.tmp
    doit

After the documentation has been created (since it is now part of the
binary program distribution), give the command "new_binary" (in sddoc)
to save the MSVC++ builds of Sdtty and Sd.

-----------------------------------------------------------------

                        SAVING SOURCES

In \wba\sd:          save _vnnnn    (e.g.  save _v3201 -- No periods)
In \wba\sddoc:       save _vnnnn
In \wba\sd\regress:  save _vnnnn

Copy these onto archival disks.  All sources can fit onto 2 disks.
If taking stuff to MPG at this point, be sure to take "install.exe"
and "install3.exe" also (if preparing release at MPG.)  If preparing
release at home, just continue.

    At MPG, if desired to send sources:
                tarball _vnnnn

-----------------------------------------------------------------

               TESTING AND PRODUCTION BUILD - Linux

On Atlas, create directories sd and sd\regress under /users/wba.
FTP (in binary mode) the zipfiles for sources and regression tests
into those directories.

It seems best, because atlas and hpanjph don't recognize the same
users and groups, to do all accesses through hpanjph.
On hpanjph, cd to /atlas/users/wba/sd.

Telnet to hpanjph, unzip (with "-a" option) those two zipfiles.
In sd, do
   cp makefile.linux Makefile
   make
   cd regress
   chmod 777 *.sh
   ./doit.sh         [Note the forward slash]

FTP back (in binary mode) the files "sdtty" and "mkcalls" to sd.
Get sd_calls.dat also, just to check it.

Now get out of Linux.

LOG OUT OF THE NETWORK ACCOUNT!!!!!   LOG IN IN THE LOCAL DOMAIN!!!!

Once working \wba\sd\sdtty and \wba\sd\mkcalls files are in the
sd directory, and working sd_calls.txt and sd_calls.dat files are
also present, go to sddoc.
   setcygnus or setcygwin if needed
   do_linux

-----------------------------------------------------------------

BE SURE THAT THE ENVIRONMENT FROM "SETDJGPP" IS NOT IN EFFECT AT THIS POINT!

Presumably "do_binary3", "new_binary", and "do_linux" have been done
at this point, so that these files exist:
      install3.exe,  bin3.txt    (DJGPP build of sdtty)
      install.exe,   bin.txt     (VC++ build of sdtty and sd)
                     binu.txt    (Linux build of sdtty)

These files should exist, all in the sddoc directory:

    bin.txt       \
    bin3.txt      |
    binu.txt      |
    plain.txt     |
    ps.txt        |   These files get mailed
    pdf.txt       |   to update the web page.
    html.txt      |
    dnu.txt       |   (HP-UX only)
    hpux.txt      /   (HP-UX only)

    install3.exe    \
    install.exe      |    These files are used locally for
    textdoc.exe      |    installation or copying onto diskettes.
    pdfdoc.exe       |
    psdoc.exe       /

Bring the "*.txt" files and the "install*.exe" files on a zip disk.
Use the "install*.exe" files for testing the binaries on Windows.
Then mail the "*.txt" files.

-----------------------------------------------------------------

To update the poster child:

   run "do_index <poster-child number>"
   Then mail the file index.txt

-----------------------------------------------------------------

To print the Postscript files:

The best way is to ftp them to hpanr0, then do
lp -dlp194 -opostscript -odouble whatever.ps

-----------------------------------------------------------------

             UPLOADING TO LYNETTE'S WEB SITE

The script "do_pack" will pack all files below except linux.tar.gz
and solaris.tar.gz into pack.zip for transport to Philips.
Note that the files linux.tar.gz and solaris.tar.gz are
produced by other means and must be uploaded separately.

BEWARE:  Be sure to delete extraneous .html files, since the "do_pack"
script simply copies them all.  Note that things like "foo.html" sometimes
arise when making poster children.

These are the files:
               html   pdf   ps   txt
appnote1,2,3    *      *     *    *
demo            *      *     *    *
sd_doc          *      *     *    *
sessions        *      *     *    *
relnotes        *      *     *    *
relnotes98      *      *     *    *
readings        *
sample          *
download-pc     *
index           *
intro           *
sessions_toc    *
sd_doc*         *

Also:
                         tar.gz   zip   exe
linux   (upload separately) *
solaris (upload separately) *
pdfdoc                      *      *
psdoc                       *      *
textdoc                     *      *
install                                  *
install3                                 *


Run the program "winscp2".
Highlight the saved session "goblin", and press "login".
Copy pack.zip (or whatever) from \wba\sddoc to remote host,
using real drag-and-drop.

Then run "putty".
Click on goblin, load, open, user = wba, pw = wba;sd

Sftp to slowlaris.tobkin.com
user = wba, pw = 12b0z0s
copy up the files.
***** NOTE PROBLEM:   INSTALL3.EXE is in upper case, so "mput *.exe" fails for it!
Be careful when uploading INSTALL3.EXE by itself.  If done as part of the
"do_pack" operation, it's OK.

(For pack.zip:)
Then ssh from goblin to slowlaris, rm sd_doc*.html, unzip pack, rm pack.zip.

Then, back on goblin, rm pack.zip or whatever files were left there.


Putty was from www.openssh.com.
Scp was from winscp.vse.cz.

Actual directory is /home/lynette/public-html/sd
It is visible to me as /home/wba
Files in it are visible on the web as http://www.lynette.org/sd/*

-----------------------------------------------------------------
