===============================================================
*********** DO NOT RENAME THIS TO HOWTOBUILD.TXT **************
Doing so would cause it to be included in the "do_pack" script.
===============================================================
          HOW TO RELEASE A NEW VERSION OF SD

     This file is \wba\sddoc\howtobuild.
        Last modified 18 Apr 2004.

-----------------------------------------------------------------

                    UPDATING VERSION NUMBERS

Be sure the version numbers and dates are correct in:
    [sd]    sdmain.cpp   (version # is visible)
    [sd]    sd.rc        (SD & UI version #'s are visible in "about" dialog)
    [sd]    sd_calls.txt (version # is visible)
    [sddoc] title.lst    (version # is visible)
    [sddoc] about.lst    (version # is visible)
    [sddoc] sd_doc.txi         (version # and date are visible)
    [sddoc] relnotes.txi       (version #, database format version #,
                               and UI version # are visible.
                               Also, check its claimed database format
                               version against database.h)
    [sddoc] index2.htmli       (version # and date are visible)
             ==> Be sure to run do_index <num> after editing this!!!

-----------------------------------------------------------------

               BUILDING THE DOCUMENTATION

It is important that this be done before "new_binary" is run, because
the manual and faq files are now wrapped into the binary distribution file.

WARNING!!!!!  These scripts require "tar".  I have put tar.exe and
cygwinB19.dll into the \bin directory.  It would probably be good to
put a better (i.e. real cygwin) version in there.


Go to sddoc directory and do:

    setmingw
    clean clean
    do_plain
    do_ps
    do_pdf
    do_index <poster-child-number>
            (It is important that a poster child number
             always be loaded before running "do_html")
    do_html

-----------------------------------------------------------------
                POSTER CHILD LOG
10 Jun 00  -  21 Aug 00  # 4
21 Aug 00  -  14 Sep 00  # 5
14 Sep 00  -  09 Oct 00  # 8
09 Oct 00  -  11 Dec 00  # 9
11 Dec 00  -  19 Feb 01  # 7
19 Feb 01  -  12 Mar 01  #10
12 Mar 01  -  27 May 01  #11
27 May 01  -  16 Sep 01  # 5
16 Sep 01  -  7  Apr 02  #14
7  Apr 02  -  30 Apr 02  #15
30 Apr 02  -  15 May 02  #12
15 May 02  -  15 Jul 02  #16
15 Jul 02  -  1  Sep 02  #17
1  Sep 02  -  16 Jan 03  #18
16 Jan 03  -  1  May 03  #19
1  May 03  -  11 Oct 03  #20
11 Oct 03  -             #21
-----------------------------------------------------------------

               TESTING AND PRODUCTION BUILD - MSVC++
   Don't do this for production release versions!  As of version 35,
   use "mingw", below.

   Set project configuration to "sdtty release", "sd release", "deploy release",
   and "mkcalls release", issuing "build / rebuild all" in each case.

   mkcalls
   // Do regression test if desired.
   // Be sure to test resolver:
   // sdtty c4 -resolve_test 60   (or whatever)
   // Then perform a resolve.  Also do "heads start" and "pick random call".
   // Can do it on two processors with different arguments to get different
   // deterministic random numbers.
   cd ..\sddoc
   new_binary     (this depends on all documentation, binaries, and database)
   do_pack        (this depends on all of the above)

-----------------------------------------------------------------

               TESTING AND PRODUCTION BUILD - MINGW

   THE DOCUMENTATION MUST HAVE BEEN PREPARED BEFORE DOING THIS!
   This is because the html files from document preparation are
   needed by this step.

   In directory sd:
   setmingw
   mingw clean
   mingw all
   mingw cleanup   // optional: remove .o files etc. after building
   mingw savesource    // This packs the "official" source distribution.

   // Do regression test if desired.
   // Be sure to test resolver:
   // sdtty c4 -resolve_test 60   (or whatever)
   // Then perform a resolve.  Also do "heads start" and "pick random call".
   // Can do it on two processors with different arguments to get different
   // deterministic random numbers.

-----------------------------------------------------------------

                        SAVING SOURCES

BE SURE TO DELETE *~ and funny .h, .cpp, .cmd, and makefile files
BEFORE DOING THIS.

In \wba\sd:          save _vnnnn    (e.g.  save _v3201 -- No periods)
In \wba\sddoc:       save _vnnnn
In \wba\sd\regress:  save _vnnnn

-----------------------------------------------------------------

                        FINAL PREPARATION

   THE DOCUMENTATION MUST HAVE BEEN PREPARED, AND THE SOURCES SAVED,
   BEFORE DOING THIS!  This is because the html files from document
   preparation, and the source files from a source save, are needed
   by this step.

   cd sddoc
   new_binary     (this depends on all documentation, binaries, and database)
   del foo*       // be sure not to upload junk
   REMEMBER TO KEEP THE SDDOC DIRECTORY CLEAR OF SUPERFLUOUS HTML AND TXT FILES!
   All html and txt files get uploaded.
   do_pack        (this depends on all of the above, and the result of "savesource")


Copy these files onto a zip disk:
   \wba\sd\sd_vnnnn.zip
   \wba\sd\regress\r_vnnnn.zip
   \wba\sddoc\doc_vnnnn.zip
   \wba\sddoc\pack.zip
   \wba\sddoc\install.exe

-----------------------------------------------------------------

               PRODUCTION BUILD AND TESTING - Linux

This assumes that a normal zip file (e.g. r_v348.zip) exists in the sd\regress directory.

****** BE SURE SOURCE FILES IN THE CURRENT DIRECTORY ARE UP TO DATE!

windows> cd sd
windows> del *~
windows> savelinuxsource
windows> pscp -l wba -pw and9user linuxsource.tar.gz an-cs1:linuxsource.tar.gz
windows> pscp -l wba -pw and9user r_XXXXX.zip an-cs1:r.zip
         (whatever the zip name is.  Just leave the destination as r.zip.)
windows> use reflection garbage to connect to an-cs1
   an-cs1> scp linuxsource.tar.gz wba@goblin.jaws.umn.edu:linuxsource.tar.gz
            (pass=wba;sd)
   an-cs1> scp r.zip wba@goblin.jaws.umn.edu:r.zip
            (pass=wba;sd)
   an-cs1> ssh goblin.jaws.umn.edu
            (pass=wba;sd)
      goblin> # Check that the "sd" directory does not exist.
      goblin> # Check that the "regress" directory does not exist.
      goblin> gzip -d linuxsource.tar.gz
      goblin> tar xovf linuxsource.tar
      goblin> cd sd
      goblin> make -f makefile.linux
      goblin> rm *.o *.c *.h *.cpp *.a
      goblin> rm *cache
      goblin> rm sample*
      goblin> rm makef*
      goblin> rm db_doc.txt
      goblin> ls -l
          ## Only the files mkcalls, sd_calls.dat, sd_calls.txt, and sdtty should exist.
          ## This is important, because everything here will be put into the distribution.
      goblin> cp * ..
      goblin> cd ..
      goblin> mkdir regress
      goblin> cd regress
      goblin> ../unzip -a ../r.zip
      goblin> chmod 777 *.sh
      goblin> ./doit.sh
      goblin> rm *
      goblin> cd ..
      goblin> rmdir regress
      goblin> rm r.zip
      goblin> rm linuxsource.tar
      goblin> rm linux.tar
      goblin> rm linux.tar.gz
      goblin> ls -l
          ## Only the files mkcalls, sd_calls.dat, sd_calls.txt, sdtty, and zip stuff should exist.
      goblin> tar cvf linux.tar sd
      goblin> gzip linux.tar
      goblin> rm sd/*
      goblin> rmdir sd
      goblin> scp linux.tar.gz ackerman@scotch.ics.uci.edu:linux.tar.gz
            (pass=and9user)
      goblin> exit
   an-cs1> exit
windows> exit

-----------------------------------------------------------------

BE SURE THAT THE ENVIRONMENT FROM "SETDJGPP" IS NOT IN EFFECT AT THIS POINT!

Presumably "new_binary" has been done at this point, so that this file exists:
      install.exe     (mingw build of sdtty and sd)

These files should exist, all in the sddoc directory:

    bin.txt       \
    bin3.txt      |
    binu.txt      |
    plain.txt     |
    ps.txt        |   These files get mailed
    pdf.txt       |   to update the web page.
    html.txt      /

    install3.exe    \
    install.exe      |    These files are used locally for
    textdoc.exe      |    installation or copying onto diskettes.
    pdfdoc.exe       |
    psdoc.exe       /

Bring the "*.txt" files and the "install*.exe" files on a zip disk.
Use the "install*.exe" files for testing the binaries on Windows.
Then mail the "*.txt" files.

-----------------------------------------------------------------

To update the poster child:

   run "do_index <poster-child number>"
   Then mail the file index.txt

-----------------------------------------------------------------

             UPLOADING TO LYNETTE'S WEB SITE

Presumably "new_binary" has been done at this point, so that this file exists:
      install.exe     (mingw build of sdtty and sd)

BEWARE:  Be sure to delete extraneous .html files, since the "do_pack"
script simply copies them all.  Note that things like "foo.html" sometimes
arise when making poster children.

cd sddoc
do_pack

This will pack all files below except linux.tar.gz
and solaris.tar.gz into pack.zip for transport to Philips.
Note that the files linux.tar.gz and solaris.tar.gz are
produced by other means and must be uploaded separately.

These are the files:
               html   pdf   ps   txt
appnote1,2,3    *      *     *    *
demo            *      *     *    *
sd_doc          *      *     *    *
sessions        *      *     *    *
relnotes        *      *     *    *
relnotes98      *      *     *    *
readings        *
sample          *
download-pc     *
index           *
intro           *
faq             *
sessions_toc    *
sd_doc*         *

Also:
                         tar.gz   zip   exe
linux   (upload separately) *
solaris (upload separately) *
pdfdoc                      *      *
psdoc                       *      *
textdoc                     *      *
sd_source                          *
install                                  *


windows> pscp -l wba -pw and9user pack.zip an-cs1:pack.zip

windows> use reflection garbage to connect to an-cs1
   an-cs1> scp pack.zip ackerman@scotch.ics.uci.edu:pack.zip
            (pass=and9user)
   an-cs1> ssh -l ackerman scotch.ics.uci.edu
            (pass=and9user)
          # dir will appear to be /home/ackerman,
          # is actually /home/lynette/public-html/sd,
          # which is where the web pages are.
      scotch> unzip pack
      scotch> rm pack.zip
      scotch> exit
   an-cs1> rm pack.zip
   an-cs1> exit
windows> exit

-----------------------------------------------------------------

Putty was from www.openssh.com.
Scp was from winscp.vse.cz.

Actual directory is /home/lynette/public-html/sd
It is visible to me as /home/wba
Files in it are visible on the web as http://www.lynette.org/sd/*

-----------------------------------------------------------------
