===============================================================
          HOW TO RELEASE A NEW VERSION OF SD

     This file is \wba\sddoc\howtobuild.
        Last modified 11 Oct 2003.

-----------------------------------------------------------------

                    UPDATING VERSION NUMBERS

Be sure the version numbers and dates are correct in:
    [sd]    sdmain.cpp   (version # is visible)
    [sd]    sd.rc        (SD & UI version #'s are visible in "about" dialog)
    [sd]    sd_calls.txt (version # is visible)
    [sddoc] title.lst    (version # is visible)
    [sddoc] about.lst    (version # is visible)
    [sddoc] sd_doc.txi         (version # and date are visible)
    [sddoc] relnotes.txi       (version #, database format version #,
                               and UI version # are visible.
                               Also, check its claimed database format
                               version against database.h)
    [sddoc] index2.htmli       (version # and date are visible)
             ==> Be sure to run do_index <num> after editing this!!!
    [sddoc] download-unix.html (version # of HP-UX release is visible)

-----------------------------------------------------------------

                       BEFORE STARTING

BEWARE!!!!!

MANY OPERATIONS REQUIRE A LOCAL ACCOUNT!!!
THESE INCLUDE ALL DOCUMENT PREPARATION, AND THE DO_LINUX SCRIPT.

LOG OUT OF THE NETWORK ACCOUNT!!!!!   LOG IN IN THE LOCAL DOMAIN!!!!


Do "clean clean" in sddoc.  This deletes all the derived documentation
files, the self-extracting .exe files, and the ".zip" and ".msg"
files used for uploading to the web.

Then choose the poster child.  Do "do_index <number>".

-----------------------------------------------------------------

               BUILDING THE DOCUMENTATION

It is important that this be done before "new_binary" is run, because
the manual and faq files are now wrapped into the binary distribution file.

WARNING!!!!!  These scripts require "tar".  I have put tar.exe and
cygwinB19.dll into the \bin directory.  It would probably be good to
put a better (i.e. real cygwin) version in there.


Go to sddoc directory and do:

    setmingw
    do_plain
    do_ps
    do_pdf
    do_index <poster-child-number>
            (It is important that a poster child number
             always be loaded before running "do_html")
    do_html
    do_download-unix   (at MPG, if HP-UX release is desired, see below)
    do_hpux            (at MPG, if HP-UX release is desired, see below)

-----------------------------------------------------------------
                POSTER CHILD LOG
10 Jun 00  -  21 Aug 00  # 4
21 Aug 00  -  14 Sep 00  # 5
14 Sep 00  -  09 Oct 00  # 8
09 Oct 00  -  11 Dec 00  # 9
11 Dec 00  -  19 Feb 01  # 7
19 Feb 01  -  12 Mar 01  #10
12 Mar 01  -  27 May 01  #11
27 May 01  -  16 Sep 01  # 5
16 Sep 01  -  7  Apr 02  #14
7  Apr 02  -  30 Apr 02  #15
30 Apr 02  -  15 May 02  #12
15 May 02  -  15 Jul 02  #16
15 Jul 02  -  1  Sep 02  #17
1  Sep 02  -  16 Jan 03  #18
16 Jan 03  -  1  May 03  #19
1  May 03  -  11 Oct 03  #20
11 Oct 03  -             #21
-----------------------------------------------------------------

               TESTING AND PRODUCTION BUILD - MSVC++
   Don't do this for production release versions!  As of version 35,
   use "mingw", below.

   Set project configuration to "sdtty release", "sd release", "deploy release",
   and "mkcalls release", issuing "build / rebuild all" in each case.

   mkcalls
   // Do regression test if desired.
   // Be sure to test resolver:
   // sdtty c4 -resolve_test 60   (or whatever)
   // Then perform a resolve.  Also do "heads start" and "pick random call".
   // Can do it on two processors with different arguments to get different
   // deterministic random numbers.
   cd ..\sddoc
   new_binary     (this depends on all documentation, binaries, and database)
   do_pack        (this depends on all of the above)

-----------------------------------------------------------------

               TESTING AND PRODUCTION BUILD - MINGW

   In directory sd:
   setmingw
   mingw clean
   mingw all
   mingw cleanup   // optional: remove .o files etc. after building

   // Do regression test if desired.
   // Be sure to test resolver:
   // sdtty c4 -resolve_test 60   (or whatever)
   // Then perform a resolve.  Also do "heads start" and "pick random call".
   // Can do it on two processors with different arguments to get different
   // deterministic random numbers.
   cd ..\sddoc
   new_binary     (this depends on all documentation, binaries, and database)
   del foo*       // be sure not to upload junk
   REMEMBER TO KEEP THE SDDOC DIRECTORY CLEAR OF SUPERFLUOUS HTML AND TXT FILES!
   All html and txt files get uploaded.
   do_pack        (this depends on all of the above)

-----------------------------------------------------------------

                        SAVING SOURCES

In \wba\sd:          save _vnnnn    (e.g.  save _v3201 -- No periods)
In \wba\sddoc:       save _vnnnn
In \wba\sd\regress:  save _vnnnn

Copy these files onto a zip disk:
   \wba\sd\sd_vnnnn.zip
   \wba\sd\regress\r_vnnnn.zip
   \wba\sddoc\doc_vnnnn.zip
   \wba\sddoc\pack.zip
   \wba\sddoc\install.exe

-----------------------------------------------------------------

               PRODUCTION BUILD AND TESTING - Linux

This assumes that a normal zip file (e.g. r_v348.zip) exists in the sd directory.

windows> cd sd
windows> del *~
windows> savelinuxsource
windows> ftp atlas
            (user=wba)
            (pass=x464pq)
windows> bin
windows> put linuxsource.tar.gz
windows> put r_XXXXX.zip r.zip   (whatever the zip name is.  Just leave it as r.zip after this point.)
windows> quit
windows> telnet atlas
            (user=wba)
            (pass=x464pq)
   atlas> scp linuxsource.tar.gz wba@goblin.jaws.umn.edu:linuxsource.tar.gz
            (pass=wba;sd)
   atlas> scp r.zip wba@goblin.jaws.umn.edu:r.zip
            (pass=wba;sd)
   atlas> ssh goblin.jaws.umn.edu
            (pass=wba;sd)
      goblin> # Check that the "sd" directory does not exist.
      goblin> # Check that the "regress" directory does not exist.
      goblin> gzip -d linuxsource.tar.gz
      goblin> tar xovf linuxsource.tar
      goblin> cd sd
      goblin> make -f makefile.linux
      goblin> cp sdtty ..
      goblin> cp mkcalls ..
      goblin> cp sd_calls.txt ..
      goblin> cp sd_calls.dat ..
      goblin> rm *.o *.c *.h *.cpp *.a
      goblin> rm *cache
      goblin> rm sample*
      goblin> rm makef*
      goblin> rm db_doc.txt
      goblin> ls -l
          ## Only the files mkcalls, sd_calls.dat, sd_calls.txt, and sdtty should exist.
      goblin> cd ..
      goblin> mkdir regress
      goblin> cd regress
      goblin> ../unzip -a ../r.zip
      goblin> chmod 777 *.sh
      goblin> ./doit.sh
      goblin> rm *
      goblin> cd ..
      goblin> rmdir regress
      goblin> rm r.zip
      goblin> rm linuxsource.tar
      goblin> rm linux.tar
      goblin> rm linux.tar.gz
      goblin> ls -l
          ## Only the files mkcalls, sd_calls.dat, sd_calls.txt, sdtty, and zip stuff should exist.
      goblin> tar cvf linux.tar sd
      goblin> gzip linux.tar
      goblin> rm sd/*
      goblin> rmdir sd
      goblin> scp linux.tar.gz ackerman@scotch.ics.uci.edu:linux.tar.gz
            (pass=12b0z0s)
      goblin> exit
   atlas> exit
windows> exit

-----------------------------------------------------------------

BE SURE THAT THE ENVIRONMENT FROM "SETDJGPP" IS NOT IN EFFECT AT THIS POINT!

Presumably "do_binary3", "new_binary", and "do_linux" have been done
at this point, so that these files exist:
      install3.exe,  bin3.txt    (DJGPP build of sdtty)
      install.exe,   bin.txt     (VC++ build of sdtty and sd)
                     binu.txt    (Linux build of sdtty)

These files should exist, all in the sddoc directory:

    bin.txt       \
    bin3.txt      |
    binu.txt      |
    plain.txt     |
    ps.txt        |   These files get mailed
    pdf.txt       |   to update the web page.
    html.txt      |
    dnu.txt       |   (HP-UX only)
    hpux.txt      /   (HP-UX only)

    install3.exe    \
    install.exe      |    These files are used locally for
    textdoc.exe      |    installation or copying onto diskettes.
    pdfdoc.exe       |
    psdoc.exe       /

Bring the "*.txt" files and the "install*.exe" files on a zip disk.
Use the "install*.exe" files for testing the binaries on Windows.
Then mail the "*.txt" files.

-----------------------------------------------------------------

To update the poster child:

   run "do_index <poster-child number>"
   Then mail the file index.txt

-----------------------------------------------------------------

             UPLOADING TO LYNETTE'S WEB SITE

The script "do_pack" will pack all files below except linux.tar.gz
and solaris.tar.gz into pack.zip for transport to Philips.
Note that the files linux.tar.gz and solaris.tar.gz are
produced by other means and must be uploaded separately.

BEWARE:  Be sure to delete extraneous .html files, since the "do_pack"
script simply copies them all.  Note that things like "foo.html" sometimes
arise when making poster children.

These are the files:
               html   pdf   ps   txt
appnote1,2,3    *      *     *    *
demo            *      *     *    *
sd_doc          *      *     *    *
sessions        *      *     *    *
relnotes        *      *     *    *
relnotes98      *      *     *    *
readings        *
sample          *
download-pc     *
index           *
intro           *
faq             *
sessions_toc    *
sd_doc*         *

Also:
                         tar.gz   zip   exe
linux   (upload separately) *
solaris (upload separately) *
pdfdoc                      *      *
psdoc                       *      *
textdoc                     *      *
install                                  *


windows> cd sddoc
windows> ftp atlas
            (user=wba)
            (pass=x464pq)
windows> bin
windows> put pack.zip
windows> quit
windows> telnet atlas
            (user=wba)
            (pass=x464pq)
   atlas> scp pack.zip ackerman@scotch.ics.uci.edu:pack.zip
            (pass=12b0z0s)
   atlas> ssh -l ackerman scotch.ics.uci.edu
            (pass=12b0z0s)
          # dir will appear to be /home/ackerman,
          # is actually /home/lynette/public-html/sd,
          # which is where the web pages are.
      scotch> rm sd_doc*.html
      scotch> unzip pack
      scotch> rm pack.zip
      scotch> exit
   atlas> rm pack.zip
   atlas> exit
windows> exit

-----------------------------------------------------------------

OBSOLETE OLD PROCEDURE
Run the program "winscp2".
Highlight the saved session "goblin", and press "login".
Copy pack.zip (or whatever) from \wba\sddoc to remote host,
using real drag-and-drop.

Then run "putty".
Click on goblin, load, open, user = wba, pw = wba;sd

Sftp to slowlaris.tobkin.com
user = wba, pw = 12b0z0s
copy up the files.
***** NOTE PROBLEM:   INSTALL3.EXE is in upper case, so "mput *.exe" fails for it!
Be careful when uploading INSTALL3.EXE by itself.  If done as part of the
"do_pack" operation, it's OK.

(For pack.zip:)
Then ssh from goblin to slowlaris, rm sd_doc*.html, unzip pack, rm pack.zip.

Then, back on goblin, rm pack.zip or whatever files were left there.


Putty was from www.openssh.com.
Scp was from winscp.vse.cz.

Actual directory is /home/lynette/public-html/sd
It is visible to me as /home/wba
Files in it are visible on the web as http://www.lynette.org/sd/*

-----------------------------------------------------------------
