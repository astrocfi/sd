\input texinfo @c %**start of header -*-texinfo-*-
@setfilename relnotes.info
@settitle Sd Release Notes
@c Time-stamp: <10 Aug 2008 wba>
@iftex
@headings off
@oddheading @| @| @thispage
@evenheading @thispage @| @|
@finalout
@end iftex
@c %**end of header

@set title1 RELEASE NOTES FOR VERSION 37.81
@set title2 Database version = 37.81 format = 280
@set title3 parser version 1.13, X11 UI version 1.17, SD UI version 4.10

@node Top, Intro, (dir), (dir)

@menu
This file documents the user-visible changes in the current and recent
versions of the Sd program.

* Intro::               Information about the current version

Changes as of the following versions:
* 37.81::
* 37.8::
* 37.7::
* 37.6::
* 37.5::
* 37.4::
* 37.3::
* 37.2::
* 37.1::
* 37.0::
* 36.81::
* 36.8::
* 36.7::
* 36.64::
* 36.63::
* 36.62::
* 36.61::
* 36.60::
* 36.59::
* 36.58::
* 36.57::
* 36.56::
* 36.55::
* 36.54::
* 36.53::
* 36.52::
* 36.5::
* 36.4::
* 36.3::
* 36.1::
* 36.0::
* 35.1::
* 35.0::

The files @file{relnotes03.txi} and @file{relnotes98.txi} have
notes relating to even older versions.
@end menu

@node Intro, 37.81, Top, (dir)

@center @titlefont{@value{title1}}@*
@center @value{title2}@*
@center @value{title3}@*

@w{ }@c the @* above makes the @sp below fail without this line  1998-05
@sp 2
@noindent Copyright @copyright{} 1996-2009 William B. Ackerman
@sp 3
@menu
* 37.81::               Changes in the current version
@end menu

@c ************
@node 37.81, 37.8, Intro, Top
@unnumberedsec Version 37.81 changes

There is a new concept, available at C4, @strong{overlapped siamese}.  This is done
from a 2x4, usually one in which people are T-boned.  Each person works either as couples
or in tandem, as if with the other person in his quadrant, regradless of that other person's
facing direction.  Each person's resulting setup is a virtual 2x2 box, and the person
does the call in that box.

@c ************
@node 37.8, 37.7, 37.81, Top
@unnumberedsec Version 37.8 changes

The treatment of @strong{coordinate} from T-boned formations was improved.

Some tricky cases of @strong{1/2 run} were fixed.

The @strong{finally matrix quadruple lines working backward the pulley} bug was fixed.

The @strong{recycle ; plus 2} bug was fixed.

Some bugs were fixed relating to @strong{roll} after a @strong{spread}.

The @strong{initially split phantom columns exchange the boxes 1/4} bug was fixed.

The @strong{finally stable cast off 3/4} bug was fixed.

The @strong{quadruple lines working forward ferris turn and deal} bug was fixed.

It is possible to call @strong{promenade, <anyone> lead for a <anycall>} from 2-faced lines. 
Previously, it had been possible to call @strong{<anyone> lead} from thar-like formations. 
It is now also legal from 2-faced lines, but you must say @strong{promenade}.

@c ************
@node 37.7, 37.6, 37.8, Top
@unnumberedsec Version 37.7 changes

Box-like calls, such as @strong{peel and trail}, are not allowed from triangles at levels below C2.
We apologize to the C1 dancers at Tech Squares who were inconvenienced by this.

The triple column/line/wave concepts, and the interlocked triangle concept, were moved from C2 to C1.

The @strong{mimic} concept was improved somewhat.  It now uses a
reassembly algorithm that is consistent with the paper at
@uref{http://www.lynette.org/mimic.pdf}.  It still handles only belles,
beaus, leads, and trailers.

The handling of alamo vs. "O" spots is better.  It uses the alamo setup more often.
The call @strong{adjust alamo to other pairing} is needed much less often.
There is better handling of dixie grand -- one can go directly to fractional tops, etc.

There is better handling of inhomogeneous unsymmetrical setups: box and diamond, etc.

The call @strong{recycle} was fixed to make it illegal from, for example, back-to-back lines.  It was taking
too literally the "fold/counter rotate/roll" definition.  That definition is now only used if
an actual concept that requires it is used.

The notion that @strong{the gamut} has a distinct first part and can therefore be "finished" was removed.
That is obsolete.

A bug in @strong{initially 1-1/2 rims trade back} was fixed.

A bug that wrongly allowed @strong{hocus pocus} from a butterfly was fixed.

@c ************
@node 37.6, 37.5, 37.7, Top
@unnumberedsec Version 37.6 changes

New concept: @strong{mimic}.  This is less complete than the full version in Sue Curtis's paper
at @uref{http://www.lynette.org/mimic.pdf}.
Note also that it does not use the "merge with phantoms from your setup
only" rule for 4-person setups.
When it has placed the phantoms, going into a 16-person setup, and divided that into two
8-person setups, it keeps those 8-person setups distinct when merging.  However, it does not recognize,
within the 8-person setups, whether the call was actually a 4-person call for the purpose
of merging.
So, for example, from back-to-back lines,
@strong{mimic leads wheel the ocean} goes to waves, not a starting DPT.
This concept is under discussion.

Sd has some understanding of unsymmetrical setups involving, for example, a diamond and a line.
This is not complete.

The @strong{triple boxes working together deuces wild} bug was fixed.

@c ************
@node 37.5, 37.4, 37.6, Top
@unnumberedsec Version 37.5 changes

New concept: @strong{OX} (distorted column.)

New concept: @strong{nose}.  This is less complete than the full version in Masahiro Kurasawa's paper
at @uref{http://www.lynette.org/nose.pdf}.

New call family: @strong{dixie tag}.

New selectors: @strong{the diamond}, @strong{near/far 4}, @strong{nearest/farthest person}.

A bug was fixed in the printout of certain complex combinations.  We thank our
current A2 group for finding this, and apologize to anyone who might have called
something incomple.

An extremely obscure bug was found in the behavior after a
@strong{reconcile} command was completed.  We thank Justin Legakis for
finding this.

The @strong{offset tidal column/line/wave} concept, in a fully offset 2x8, can be used
with shape-changing calls.

Sd can now do a better job with 2-person calls in Z lines or columns.

Sd has a (limited) ability to handle setups involving a diamond placed unsymmetrically within a tidal line.

The "in roll to a wave and roll" bug was fixed.

A bug was fixed in @strong{rally} and @strong{scoot and rally} with phantoms on the outside.

The first and last halves of the call @strong{double pass thru} are recognized.

The call @strong{fan chain the star (T-bone)} has been removed.  Just do @strong{fan chain the star},
but be aware that this might not agree with the "official" definition.

The @strong{funny} concept can be applied to the centers' trade in calls like @strong{acey deucey}
and @strong{hocus pocus}.  This means that people trade only if in a real miniwave or couple, not if
T-boned.  Without this concept, the centers just do their part of a trade.

There is the usual better tracking of phantoms, and various other minor fixes and improvements.

@c ************
@node 37.4, 37.3, 37.5, Top
@unnumberedsec Version 37.4 changes

New concepts: @strong{two-faced}, or @strong{2-faced}.  This will make
the warning go away if a call that normally expects a wave is called
from a two-faced line.

The meaning of "step to a [mini]-wave" was reworked.  See the FAQ file
for details.  Briefly, people always step to right hands (or left hands
if the @strong{left} modifier was given) even if the overall resulting
setup is not a wave.  The various warnings related to this, and to doing
things in a 2-faced line without the @strong{two-faced} concept, were
made more accurate.

The display colors with -no_intensify and -reverse_video were changed to be less intense.

The program will be less likely to be confused by the difference between an alamo ring and "O" spots.

A number of @strong{fractal} calls were improved.

The ability to do things that involve 45 degree rotation was improved.

The "2x5 matrix heads hinge" bug was fixed.

The "echo split phantom waves rims trade back" bug was fixed.

The "mirror split dixie" bug was fixed.

The "unwrap the diamonds" bug was fixed.

The "initially once removed all tie" bug was fixed.

The "finally 1/2 sandwich" bug was fixed.

Modifications to calls like @strong{motivate} now count as concepts for the purpose of @strong{echo}.
That is, @strong{echo [cross back] er's motivate} and @strong{echo in roll motivate} work.

An extremely stupid and embarrassing bug was fixed.  This bug probably
never arose in practice.  Nevertheless, we apologize to anyone who
called something in a T-boned butterfly and found the center 4 rotated
improperly.

Some minor bug fixes were made in calls like @strong{1/2 circulate} and @strong{split counter rotate}.

A marginal/bogus use of extend (1/4 tag spots, miniwaves everywhere) is now allowed.  A warning
is printed, of course.

The call @strong{half sashay} may also be spelled @strong{1/2 sashay}.

Unsymmetrical phantom bend the line, and unsymmetrical fudging of the result to a 4x4 matrix, and various
things that can be done with the result, were improved.

Various 3x3 and 4x4 rotates were fixed.

Unsymmetrical bent lines and bent columns in a 4x4 (clumps) are now allowed.

@c ************
@node 37.3, 37.2, 37.4, Top
@unnumberedsec Version 37.3 changes

@b{MAJOR CHANGE}

New concept family: @strong{dynamic}.  This is a variation of
@strong{twosome}.  Those who are turning to the right work rigidly,
while those who are turning to the left work twosome.  The
@strong{reverse dynamic} works the other way---those who are turning to
the right work twosome, while those who are turning to the left work
rigidly.

The word ``dynamic'' (or ``reverse dynamic'') is grammatically similar
to ``twosome'' (or ``threesome'', ``diamondsome'', etc.)  That is:

@table @code
@item @strong{couples twosome} becomes @strong{couples dynamic}
@item @strong{siamese twosome} becomes @strong{siamese dynamic}
@item @strong{couples threesome} becomes @strong{couples of 3 dynamic}
@item @strong{boxsome} becomes @strong{boxes dynamic}
@item @strong{diamondsome} becomes @strong{diamonds dynamic}
@item @strong{skewsome} becomes @strong{skew dynamic}
@item @strong{gruesome twosome} becomes @strong{gruesome dynamic}
@end table

Fractional solid-to-dynamic and twosome-to-dynamic concepts are also permitted.  Use, for example:

@table @code
@item @strong{couples 1/4 dynamic} @r{or} @strong{couples twosome 1/4 dynamic}
@item @strong{siamese 1/4 dynamic} @r{or} @strong{siamese twosome 1/4 dynamic}
@item @strong{couples of 3 1/4 dynamic} @r{or} @strong{couples threesome 1/4 dynamic}
@item @strong{boxes are solid 1/4 dynamic} @r{or} @strong{boxsome 1/4 dynamic}
@item @strong{diamonds are solid 1/4 dynamic} @r{or} @strong{diamondsome 1/4 dynamic}
@item @strong{skew 1/4 dynamic} @r{or} @strong{skewsome 1/4 dynamic}
@item @strong{gruesome as couples 1/4 dynamic} @r{or} @strong{gruesome couples twosome 1/4 dynamic}
@end table

@b{ANOTHER MAJOR CHANGE}

The program keeps track of ``call usage statistics''.  This operates in the context of the ``sessions'' feature.
A call's ``frequency number'' is the number of times it has been used since the counters were reset.
The new commands are:

@strong{frequency show}---List calls, with frequency numbers.

@strong{frequency show level}---List calls at the current level, with frequency numbers.

@strong{frequency show near level}---List calls at the current level or next lower level, with frequency numbers.

@strong{frequency show sort}---Like @strong{frequency show}, but sort calls by decreasing number.

@strong{frequency show sort level}---Like @strong{frequency show level}, but sort calls by decreasing number.

@strong{frequency show sort near level}---Like @strong{frequency show near level}, but sort calls by decreasing number.

@strong{frequency start}---Set up the statistics counting associated with the current session.

@strong{frequency reset}---Reset all the counters to zero.

@strong{frequency delete}---Terminate the statistics counting.

The statistics are kept in a separate file, which is associated with a ``session''.  This file
persists for as long as the session is defined, so the statistics keep track of all sequences
associated with the session, whenever they were written.

@b{OTHER CHANGES}

There is better handling of combinations of meta-concepts.  For example, it can do
@strong{finally initially tandem reverse order settle back}.

It can do a better job of handling unsymmetrical cases of the @strong{those facing} selector.

It has a more precise notion of how to know where missing outsides went.

It has better handling of @strong{roll} information when doing @strong{checkerboard} concepts.

It recognizes more resolves, of course.

@c ************
@node 37.2, 37.1, 37.3, Top
@unnumberedsec Version 37.2 changes

New selectors were added: @strong{those facing the caller's left} and
@strong{those facing the caller's right}.  These go along with
@strong{those facing the caller} and @strong{those facing away from the
caller}.  You don't need to type the apostrophe.

@c ************
@node 37.1, 37.0, 37.2, Top
@unnumberedsec Version 37.1 changes

A few bugs relating to 2x1 or 3x1 @strong{wheel the ocean} were fixed.

The calls @strong{slip} and @strong{slither} now recognize that the centers
must be in a miniwave.

One can say either @strong{left chase} or @strong{chase left}.

One can do @strong{concentric diamonds circulate} or  @strong{once removed diamonds circulate}
without saying "diamond" a second time.

The resolver is now @emph{much} less likely to find @strong{dixie grand} getouts
from waves or an 8-chain.

The "curses" mechanism is no longer used under any circumstances under
UNIX-like systems.  Makefiles have been changed accordingly.

@c ************
@node 37.0, 36.81, 37.1, Top
@unnumberedsec Version 37.0 changes

The call @strong{invert} as a tagging call (as in @strong{invert your neighbor})
was moved from C3X to C3A.

There is actually a significant improvement to the reconciler.  Instead of just
inserting calls at a specified point, it can replace a range of calls in the
existing sequence.  In addition to the commands @strong{raise reconcile point}
and @strong{lower reconcile point}, there are new commands @strong{grow reconcile region}
and @strong{shrink reconcile region}.  These manipulate the size of the reconcile
region.  When this region has a nonzero size, it is indicated by two dotted lines
on the display.  The reconciler will search for a call or short sequence of calls that
replaces the region between the dotted lines.

One can do @strong{triple diamonds circulate} without saying "diamond" a second time.

The program is much better about not adding extra text such as
@strong{interlocked diamonds, diamond circulate}.  It will still use it
for things like @strong{interlocked diamonds, diamond as couples 1/4 right}.

The call @strong{wheel and spread} now gives preference to a one-faced line
as its starting setup when it is ambiguous.

The call @strong{triple cross} can be done in certain parallelograms.

The call @strong{single scoot and trade} now has 3 explicit parts.

Certain obscure calls have been moved to the level C4X.  Calls on levels C3X and C4X
are simply not allowed at levels C3 or C4.  The level must be set explicitly.

It is now permissible for the 2nd and 4th parts of the call @strong{reset} to be
be done as a partner hinge instead of an arm turn.

The program has a somewhat better idea about what is supposed to happen on a
@strong{run the wheel} in a distorted setup.

The printing of commas in things like @strong{initially phantom tandem} is more sensible.

@c ************
@node 36.81, 36.8, 37.0, Top
@unnumberedsec Version 36.81 changes

The call @strong{invert} as a tagging call (as in @strong{invert your neighbor})
was moved from C2 to C3X.  At had been at C2 for over 11 years.  I have no idea why.

Certain cases of @strong{phantom tandem strut right} were fixed.

The @strong{phantom tandem} family of calls expands to a 4x4 if
possible, or a 2x8 if that fails, or a 1x16 if that fails.  It used
to accept a 2x6 without expanding to a 2x8.  For example it used to be possible
to call a @strong{phantom tandem double play} in a 2x6.  You must now say
@strong{2x6 matrix phantom tandem double play}.

The @strong{who's on 1st} family of calls was renamed to
@strong{who's on 1st}, @strong{who's on 2nd}, @strong{who's on 3rd}, and @strong{who's on 4th}.
The last of these may also be called @strong{who's at home}.  The old spellings
such as @strong{who's on 1st, #1 couple go} are no longer supported.  The action of this
call is based on location in the square, not original couple number, so a designation
such as "#1 couple" is not appropriate.

Below the C1 level, the call @strong{cycle and wheel} won't allow the @strong{split recycle} variety
of recycle.

The tagging call @strong{chase the tag} was added, so you can say either
@strong{chase your leader} or @strong{chase the tag your leader}.
There were already the plain calls @strong{chase the tag} and @strong{chase the tag N/4}.
What was added is the use of @strong{chase the tag} as an <ATC> call.

A bug in certain cases of @strong{checkpoint} was fixed.

@c ************
@node 36.8, 36.7, 36.81, Top
@unnumberedsec Version 36.8 changes

New meta-concepts: @strong{double echo}, @strong{triple echo}, and
@strong{quadruple echo}.

New concepts: @strong{3x3 concentric}, @strong{4x4 concentric}, 
@strong{3x3 cross concentric}, @strong{4x4 cross concentric}.

The designator @strong{some} may be used with concepts of the
@strong{<anyone> are as couples} variety, if the facing directions make
it clear who are involved.  For example, one can use @strong{some are
couples threesome, swing thru} from a suitable tidal line.

The calls @strong{1/2 here comes the judge} and @strong{1/2 sock it to me}
now leave the 3 non-active people on a column that is congruent to their
starting line.  When done from a tidal one-faced line, these will leave
a column of 6 in the center.

The resolver should produce far fewer @strong{dixie grand} getouts from waves or
8-chains.  The reconciler will not add @strong{circulate}, @strong{extend},
or similar things to the end of the sequence.  Also, if the ending position
of a reconcile is a squared set, it will be at home.

When a @strong{cast off N/4} is interrupted for any reason (for example, an explicit
interruption, or some part of it is done with a concept such as @strong{as couples}),
the casting direction will be re-evaluated when the call is resumed.  That is, if
the cast is "pushy", the centers will be re-evaluated for the push.

Concepts such as @strong{cross concentric} should not be used with
meta-concepts that cause it to be applied multiple times, as in
@strong{initially stable cross concentric mix}.  Doing so causes the
dancers to do the centers vs. ends change multiple times, which is
controversial and confusing.  The program will give a warning in such a
case.

More combinations of phantom concepts are permitted.  Either of split
phantom CLW or triple CLW working, may be followed by either
of multiple boxes or split phantom boxes.  Either of split phantom boxes
or multiple boxes working, may be followed by split phantom CLW.

The legal combinations are now:

@example
@group
split phantom C/L/W, split phantom boxes
split phantom C/L/W, triple/quadruple boxes
triple C/L/W working, split phantom boxes
triple C/L/W working, triple/quadruple boxes
split phantom boxes, split phantom C/L/W
multiple boxes working, split phantom C/L/W
@end group
@end example

The program will issue a warning whenever it has to determine who the
@strong{centers} in a 3x1 diamond are.  They are the center diamond.
If those people are designated in some other way, such as @strong{girls},
the warning is not issued.

A bug in @strong{sidetrack} in unusual setups has been fixed.
We apologize to the caller and dancers who were inconvenienced by this.

The inability to do @strong{initially oddly once removed [turn the key]
motivate} has been fixed.

It is now possible to have designated people @strong{pass in}, or similar
things, without saying @strong{do your part}.

The @strong{roll} action after @strong{by golly} has been fixed.

The printing of transcript files (on paper, for those who use this
technology) has been improved.  Some printers can print all the way to the
edge of the page, though most cannot.  On such printers, transcripts used
to be printed all the way to the left edge of the page.  The program now
uses the printer driver's properties to place margins in a sensible way.

Sdtty will now resist being shut down by the system if a sequence is in
progress.  Sd and Sdtty have both interrogated the user ("Do you really
want to abort this sequence?") when the "quit" command is given.
Furthermore, Sd interrogates the user when the "X" is clicked in the
upper-right corner of the window (or the "close" command from the system
menu obtained by clicking the interlocking squares icon in the extreme
upper left), rather than just letting the program be terminated.  Sdtty
now does the same.  Be aware that the Windows (a registered trademark, I
believe) operating system is much less patient with "console
applications" (such as Sdtty) resisting a shutdown than with "windows
applications" (such as Sd) doing so.  If you accidentally click the "X"
in the upper-right corner while a sequence is in progress, Sdtty will
ask "Do you really want to abort this sequence?"  Type "n".  Also, the
system will complain "Windows cannot end this program".  Click "cancel",
and Sdtty will continue.

Sdtty now handles the underscore character correctly on Japanese keyboards.
I thank Sue Curtis and Kiyoshi Kikuchi for tracking this problem down.

@c ************
@node 36.7, 36.64, 36.8, Top
@unnumberedsec Version 36.7 changes

There was a major overhaul in the inner workings of the program, relating
to the handling of "maps" in sdistort.cpp.  A lot of ugly special-case code
was removed.

It is now legal to stack certain combinations of phantom-creating concepts:

@example
@group
split phantom boxes, split phantom C/L/W
split phantom C/L/W, split phantom boxes
split phantom C/L/W, triple/quadruple boxes
@end group
@end example

@strong{once removed turn the key} is illegal in point-to-point diamonds.
The second part, @strong{counter rotate}, is not legal in that setup.

The program can handle meta-concept combinations involving mystic formations,
as in @strong{initially mystic triple boxes}.

New calls: @kbd{in anchor} and @kbd{out anchor}, analogous to
@kbd{left anchor} and @kbd{right anchor}.

@c ************
@node 36.64, 36.63, 36.7, Top
@unnumberedsec Version 36.64 changes

The way numbers are handled was modified.  Numbers can be as high as 36.
The fraction given in the @strong{crazy} concept need not be a multiple
of 1/4.  Fractions can operate on the individual quarters of parts of a
call defined with things like @strong{cast off 3/4}, so that it is
possible to do things like @strong{8/9 remake the wave} or @strong{7/15
swing the fractions} or @strong{17/36 crazy any hand remake}.

It is legal to stack @strong{split phantom CLW} concepts with
@strong{triple boxes} or @strong{quadruple boxes}.  Other combinations,
such as @strong{split phantom lines split phantom columns}
are still forbidden, because they would expand phantoms on top of
each other.

The call @strong{strike out} can be fractionalized, because @strong{detour}
can be fractionalized.

Various bugs were fixed, in such things as @strong{finally 1/2 crazy central
little more}, @strong{1x3 cast off}, @strong{initially checkpoint recoil by sidetrack},
@strong{scatter reach out} from T-bones, @strong{straight central interlocked little},
and @strong{lines [Z axle] thru}.

Collisions that occur on reasonably straightforward @strong{1/2 circulate} calls
will not raise the "take right hands" warning.  This applies to calls like
@strong{tally ho} and @strong{team up}.

More resolves are recognized.

It is permissible to spell the call @strong{lockit} as @strong{lock it}.

The calls @strong{any hand grand 1/4 cross} and @strong{any hand grand 3/4 cross}
have been moved to level C3X.

The concepts @strong{center phantom columns} and @strong{outside phantom columns}
have been moved to level C3.

New concept: @strong{<anyone> in your trapezoid}.  This is typically
used in unsymmetrical setups.

The installation procedure should do a better job of installing on various
varieties of Windows systems.  It reads the registry to determine where to
place startup icons.

@c ************
@node 36.63, 36.62, 36.64, Top
@unnumberedsec Version 36.63 changes

The @strong{solid <fractional> twosome} and @strong{twosome <fractional>
solid} types of concepts can now take fractions that are in eighths.

The @strong{skew <fractional> twosome} concept can be given as
@strong{skew <fractional> skewsome}.  In the other direction the
concept name is still @strong{skewsome <fractional> solid}.

Sdtty no longer erases the part of the display window containing the
previously written sequence when it starts a new sequence.

The call @strong{remake} finally obeys the current definition.  Except
for @strong{remake the thar}, all forms of this call obey a right-hand
rule.  You may say @strong{left remake}, of course.  There is no call
@strong{remake the column} unless @strong{grand} is used.  Otherwise,
it would be a 4-person call, and the phrase @strong{remake the column}
would be misleading.

There are now calls @strong{3X2 reshape} and @strong{3X2 convert}.
It is not necessary to use the ``allow mofications'' mechanism to
get these.

Two new startup options have been added: ``use_magenta'' and
``use_cyan''.  These change the red and blue checker colors to magenta
and cyan, respectively.  This effectively lightens them, so that they
may show up better against a black background.  (The ``pastel_color''
option does the same thing to both colors, but only if the default
girls-are-red and boys-are-blue coloring is in use.)  These two new
options take effect in all cases, and control the colors individually.

At levels C4A and above, a warning will be issued if the
@strong{distorted C/L/W} or @strong{offset C/L/W} concepts are used when
the more specific @strong{Z C/L/W} concepts could be used instead.
Unfortunately, the @strong{Z C/L/W} concepts are not available at lower
levels, so the other, less helpful, concepts need to be used instead.

The fraction given to the @strong{crazy} concept is not required to be
a multiple of 1/4.  One can say, for example, @strong{1/3 crazy the difference}.

An embarrassing bug in the interaction of @strong{crazy} and @strong{fractal}
was fixed.

The calls @strong{<anyone> peel off}, @strong{<anyone> zoom}, and
@strong{<anyone> zing} can be done, without the use of a @strong{do your
part} concept, from setups such as columns.  For example, one can do
@strong{heads star thru; girls peel off}.

A bug in @strong{roll} after @strong{curve in} or @strong{curve out} was fixed.

It is now possible to say @strong{<anyone> start vertical tag} without
the use of a @strong{do your part} concept.

It is now possible to say @strong{<anyone> spread} without the use of a
@strong{do your part} concept, as in @strong{[motivate] and the boys
spread}.  The call @strong{... and spread} has been removed.  Use
@strong{<anything> and spread}.

Alternate spellings @strong{jaywalk}, @strong{inroll circulate}, and
@strong{outroll circulate} have been provided.

A bug in the @strong{reconcile} command, looking for Left Allemande getouts,
has been fixed.  It will demand a promenade distance of zero.

A bug in @strong{twisted centers run} and @strong{twisted ends run} has
been fixed.

A bug in @strong{ends percolate} has been fixed.

The program should do a better job of not showing things like
@strong{detract [ignore everyone, line to line but [???]]} when doing
"pick random call" and similar searches.

@c ************
@node 36.62, 36.61, 36.63, Top
@unnumberedsec Version 36.62 changes

The calls @strong{cast back} and @strong{cross cast back} can be done
from a wider variety of places, and can be done with concepts like
@strong{tandem}.

The @strong{pick random call} command can be given after a call with an
@strong{<anything>} subcall, and it will search for calls to substitute
for the @strong{<anything>}.  For example, one can type @strong{breaker
<anything>} followed by @strong{pick random call}.

There is a command (actually a concept, if you care) @strong{<anyone>
move in and} that can be given when the formation is on squared-set
spots.  The following call will be done as if the sequence had been
started by having those people move in to the middle.  This replaces the
old ``heads press ahead; heads pass the ocean'' usage.  For example:
@example
@group
    just as they are
    all 4 couples right and left thru
    sides move in and split dixie diamond
@end group
@end example

The calls @strong{press in}, @strong{press out}, @strong{curve in}, and
@strong{curve out} were added.

The calls @strong{here comes the judge} and @strong{sock it to me} have
been improved and made more consistent in the presence of phantoms.

The call @strong{spin the top} will not be presented as a resolve if the
formations is a 2-faced line.  @strong{Fan the top} will continue to be
presented.

The call @strong{single ferris wheel} has been improved.

A bug in @strong{roll} after @strong{trade the deucey} was fixed.

An bug leading to improper orientation of the setup after certain
pathological operations was fixed.

More @strong{right and left grand} and @strong{left allemande} getouts
are recognized when in blocks.

The @strong{recenter} operation can handle 1x10 and 1x12 setups.

A bug was fixed involving clipboard @strong{cut} and @strong{paste}
operations on squared-set spots.

@c ************
@node 36.61, 36.60, 36.62, Top
@unnumberedsec Version 36.61 changes

A mechanism has been added to facilitate changing from ``old style''
file names to ``new style''.  The new style file names are names like
``13aug05_c1.txt'' or ``sequence_c1.txt''.  The old style file names
were like ``13aug05.c1'' or ``sequence.c1''.  The new names are better
suited for use on modern operating systems, such as Windows 95 or later,
but most session files specify the legacy names.  If you want to change
your session file to specify the new names, give the command
@strong{change to new style filename} right after starting the program
(@code{Sdtty} or @code{Sd}.)  See the manual or the FAQ file for further
details.

The definitions of @strong{strut left}, @strong{strut right and left},
and @strong{strut left and right} were fixed.  The initial pass thru for
the centers is @i{always} right shoulder.

A number of bugs (a few of which could cause a crash) were fixed in the
following areas.  It's not worth going into the details---they are all
quite obscure.  If you recognize your bug in this list, it's been fixed.

@example
@group
    "keep all pictures"
    twist the line
    change lanes
    nuclear reaction
    prefer the <anyone>, out roll circulate
    cut the interlocked diamond
    stretch, and stretched setup, with 3x1 triangles
    3x1 and 1x3 checkmate
    <ATC> and scatter reaction
    grand chain 8
@end group
@end example

@c ************
@node 36.60, 36.59, 36.61, Top
@unnumberedsec Version 36.60 changes

The program can do a few more rewinds.  It does not do rewinds by
the trial-and-error method.

The program can do phantom setup concepts stacked after couples/tandem
concepts (e.g. @strong{phantom as couples split phantom lines})
reasonably well.

The program can do @strong{prefer the <anyone>} on both @strong{in roll circulate}
and @strong{out roll circulate}.

The program can do a better job of @strong{triple star thru}.  The call
is fractionalizable.

The program can do @strong{single veer left} and @strong{single veer right}.
Callerlab allows these calls to be used without the word "single" when they
are unambiguous.  @code{Sd} does not.

The program can do @strong{single file all 4 ladies chain}.

The calls @strong{<ATC> chain thru and scatter} have been moved from C4 to C3.

The program can do a better job of @strong{plan ahead} when the centers
are phantoms.  Specifically, it can use the @strong{assume facing lines}
command to tell it how the call should be done.

The program can identify @strong{beaus}, @strong{belles},
@strong{leads}, and @strong{trailers} in C1 phantoms and collided
diamonds.

The program does a better job of showing individual screenfuls of choices
when '?' or '!' is typed.  It used to get confused by very long lines.

@c ************
@node 36.59, 36.58, 36.60, Top
@unnumberedsec Version 36.59 changes

New call: @strong{<anyone> run 1-1/2}.  Without this call, the use of
the @strong{1-1/2} concept on the call @strong{run} would cause the
designator (e.g. @strong{centers}) to be re-evaluated after the first
@strong{run}.  This would lead to things like @strong{centers run 1-1/2}
behaving in a nonintuitive way.  We believe that the more
straightforward way is not to re-evaluate in a situation like this.
This new call does it that way.

The behavior of @strong{roll} after @strong{zip code} and
@strong{squeeze} was repaired.

The @strong{half and half} concept has been extended to any fractions, including fractions
that do not add up to 1.  It is entered as in this example:
@example
@group
    1/2 and 2/3
    contour the line
    remake the wave
@end group
@end example

This takes two calls.  Do the
first fraction of the first call, and then the last fraction of the second
call.  So, in this example, do the first 1/2 of @strong{contour the line} and
then the last 2/3 of @strong{remake the wave}.

@c ************
@node 36.58, 36.57, 36.59, Top
@unnumberedsec Version 36.58 changes

The handling of alamo rings is improved.  That is, after something like
@strong{all 8 spin the top; girls run; as couples quarter right}, one
can have the heads @strong{press ahead} and do something.

The handling of very complex interacting meta-concepts is improved,
as in @strong{initially middle 1/2 centers, [contour the line] motivate}.
Callers continue to come up with amazingly intricate cases.

The program now recognizes that the @strong{crazy} concept always requires
a split of some sort, so that, for example, @strong{1/2 crazy you all}
is illegal from columns.

The sample "sd.ini" files have been removed.  Assuming that you don't
have such a file, issue the command @strong{initialize session file} to
create one.

@c ************
@node 36.57, 36.56, 36.58, Top
@unnumberedsec Version 36.57 changes

New concept: @strong{half and half}.  This takes two calls.  Do the
first half of the first call, and then the second half of the second
call.

The behavior of @strong{roll} after @strong{percolate} and @strong{stampede}
was repaired.

The definitions of @strong{breaker} and @strong{detract} were repaired.
In both calls, the first part for the centers is @strong{box counter
rotate}, not @strong{box circulate}.  This would only make a difference
in things like @strong{breaker 3 but interrupt after the 1st part with
inrigger in roll circulate}.

@c ************
@node 36.56, 36.55, 36.57, Top
@unnumberedsec Version 36.56 changes

The program is better about doing intricate meta-concepts, such as
@strong{initially finally sandwich reverse order flip your neighbor
around settle back}, or @strong{finally contour the line around recoil}.

@c ************
@node 36.55, 36.54, 36.56, Top
@unnumberedsec Version 36.55 changes

The program is better about stepping to a wave on @strong{swing and circle}
in the presence of phantoms.

A bug that might have made the program slow to start on Linux was fixed.

@c ************
@node 36.54, 36.53, 36.55, Top
@unnumberedsec Version 36.54 changes

The program handles "curried metaconcepts".  This means that one can
do things like @strong{finally checkpoint recycle by 1/4 thru}.  The
@strong{checkpoint} concept normally takes two subject calls---@strong{recycle}
and @strong{1/4 thru} in this case.  When the concept is used under a metaconcept
(@strong{finally} in this case), the metaconcept applies only to the second
call.  The first call is treated as though it is an integral part of the
concept.  That is, the concept is treated as though it were @strong{checkpoint
recycle by}.  (The act of putting an argument into a two-argument function,
thereby turning it into a one-argument function, is known in logic theory
as "currying".)  So the whole utterance is treated as though it were
@strong{finally (checkpoint recycle by) 1/4 thru}.  Everyone casts 1/4 by the
right, followed by @strong{checkpoint recycle by turn 1/2 by the left}.

The concepts with which this works are @strong{checkpoint}, @strong{on your own},
and @strong{own the <anyone>}.

A bug causing phantom spots to disappear in certain cases of
@strong{spin chain the line} was fixed.

The program can now handle @strong{clover and <anything>} or
@strong{wheel and <anything>} from alamo rings in which couples
facing out can be identified.

A bug in @strong{<anything> the windmill} was fixed.

The program handles "1/2 crazy Z's" correctly.

The program is more accurate in the handling of the designators "center
line" and "center 1x4".

Some changes were made in the way the "curses" package is used, because
of a possible bug in which the "---more---" mechanism doesn't work properly
when a question mark is typed.

The linux version now compiled with Gcc 3.2.3, and uses "libgpm".

@c ************
@node 36.53, 36.52, 36.54, Top
@unnumberedsec Version 36.53 changes

New designators: @strong{center column/line/wave of 6}.  These are
used in a general 3x1 diamond (or a tidal setup.)  You can also use
the designator @strong{center 1x6}.

New concept:  @strong{same sex disconnected}.  This is used with a single call.
Each disconnected sex does that call.

@c ************
@node 36.52, 36.5, 36.53, Top
@unnumberedsec Version 36.52 changes

A bug in @strong{cross cycle} was fixed.  The last part is @strong{roll},
just as for @strong{recycle}.

A bug in version 36.5, arising from the cache file change, was fixed.

A bug in the handling of @strong{echo} with @strong{crazy} was fixed.

The program can do @strong{rims trade back} and @strong{hubs trade back}
from a thar and from a wave between two miniwaves.  It can also switch
between these two setups with appropriate operations such as @strong{1/2
tow truck}.

@c ************
@node 36.5, 36.4, 36.52, Top
@unnumberedsec Version 36.5 changes

In accordance with the current Callerlab definition,
the call @strong{remake the column} is a 4-person call unless the
@strong{grand} modifier is used.

The program can do @strong{parallelogram split phantom lines}
from suitably populated 4x5's and 4x6's.

The setup resulting from things like @strong{centers reach out} in
a butterfly is now a 3x4 matrix "H".

The program can handle T-boned @strong{pass the top}.

The program can handle @strong{<anyone> trade} from 4x4's, so, for example,
you can create blocks with things like @strong{girls press ahead} followed
by @strong{girls trade}.

New designators, legal in normal columns:
@example
@group
first 1
first 2
first 3
last 1
last 2
last 3
@end group
@end example

Example:  @strong{first 3 are tandems of 3 peel and trail}

These may not be the exact words that you should use.

More new designators, legal in facing lines or back-to-back
lines.  They are included only for completeness.  I am not aware that
callers actually use these designators:
@example
@group
leftmost 1
leftmost 2
leftmost 3
rightmost 1
rightmost 2
rightmost 3
@end group
@end example

An embarrassing bug was found in the handling of cache files on Linux.
It did not affect Windows users.  We apologize to the caller (who will
remain anonymous, but whose web site this program is distributed from)
who was inconvenienced by this.

@c ************
@node 36.4, 36.3, 36.5, Top
@unnumberedsec Version 36.4 changes

The program can do a better job of @strong{twisted <anyone> run}.

It can handle @strong{finally twisted clover the horn}.

The calls @strong{first couple go left, next go left} and
@strong{first couple go right, next go right} have had @strong{keep walking}
added to their names, and they go to a promenade position.  (They used to
go to a 2-faced line.)  We believe that these calls are imprecise, and
that they should be followed by something involving a promenade.

An extremely peculiar bug involving @strong{anchor the <anyone>, 3x1
triangle circulate} was fixed.

The program is more careful about not allowing @strong{pass thru} unless
people are actually facing, or some phantom or matrix concept was used.

In response to a recent discussion on the "challenge-sd" mailing list,
the call @strong{grand extend} was improved to handle all cases of N/8
tags.  Users are nevertheless warned that this is not really a call.
It is simply something that was put into the database in response to
the fact that callers occasionally use @strong{extend} in this way.

@c ************
@node 36.3, 36.1, 36.4, Top
@unnumberedsec Version 36.3 changes

Some call levels were changed in accordance with recent Callerlab decisions.
Reverse Flip and Cut the Diamond are C2.  Cross Extend is C1.  Substitute is C1.

The @strong{left orbitboard} concept was implemented.

A new startup option was added:  tab_changes_focus.
This applies to @code{Sd} only.  Windows programs normally use the tab key
to move keyboard focus around among the active windows in some fixed order,
and the shift-tab key to move in the opposite order.  This change of focus
is nearly useless in @code{Sd}, because the keyboard focus is almost always
on the text input region.  Therefore, the default behavior of @code{Sd} is to
have the tab key instead perform the same completion function as the escape key,
just as @code{Sdtty} does.  (The shift-tab key still moves focus in the backwards
order.)  This option re-enables the conventional Windows
meaning of the tab key.

The ability to do "clover and <anything>" or "<anyone> cloverleaf" was improved.

The ability to do @strong{exchange the diamonds} in the presence of phantoms
was improved.

The handling of the @strong{twin phantom 1/4 tags} and @strong{twin phantom diamonds}
concepts was improved.

Reconciles will now reject anything that has an extend or circulate.

@c ************
@node 36.1, 36.0, 36.3, Top
@unnumberedsec Version 36.1 changes

A new startup option was added:  print_length, followed by a number.
This sets the point at which lines will be broken.  It may be used
either as a command-line option (with a hyphen)

@example
@group
sdtty -print_length 68
@end group
@end example

or placed in the sd.ini file:

@example
@group
[Options]
print_length 68
@end group
@end example

The ability to do @strong{Jay Walk} from C1 Phantom formations was imroved.

The ability to fractionalize things, as in @strong{finally snag the boys outpost},
was improved.

New concepts: quintuple/sextuple C/L/W/B, quintuple/sextuple 1x4s.

Improved ability to do matrix expansions in compound calls, for example,
@strong{heads split catch [triple boxes recoil] 4}.

Improved ability to handle the @strong{matrix} concept.

The startup option "-color_by_couple_ygrb" was added.

Various improvements and bug fixes.

@c ************
@node 36.0, 35.1, 36.1, Top
@unnumberedsec Version 36.0 changes

The program is now licensed under the GNU General Public License,
and is distributed with source files.

This may impose a slight additional burden on you, the user.  You are,
of course, not required to download the source files when you obtain a
copy of @code{Sd} from the web page.  If you want to make the program
available to someone else, and you do it by giving them the URL for
downloading, that is OK.  However, if you distribute the program by
other means, such as giving someone a copy that you have placed on a CD
or diskette, you must either place the source files on the disk also, or
tell the person the URL from which they can download them.

Also, if you redistribute @code{Sd} on a web page or similar mechanism,
you must make the source files available there.

New concepts: mystic wing, invert mystic wing, other wing.

@c ************
@node 35.1, 35.0, 36.0, Top
@unnumberedsec Version 35.1 changes

The definition of @strong{recycle} has been changed.  The third part is
@strong{roll}.  I thank the Callerlab Challenge Committee for fixing
this.

The program can handle @strong{slim down} from arbitrary (legal) 4x4
setups.

The program can handle @strong{1/2 circulate} (and therefore can handle
@strong{tally ho}) from C1 phantom setups.  I have no idea why this was
overlooked for so long.

The program can handle the ``pushy'' cast in @strong{peel chain thru} from
a left-handed 3/4 tag.

The bug in the @strong{pick 8 person level call} command was fixed.

The concept @strong{twin phantom bones} has been added.  It is the same as
@strong{twin phantom I's}.

The concepts @strong{twin phantom bats} and @strong{twin phantom riggers}
have been added.  They are the same.

The program can do @strong{funny square thru} better.  I thank the Tech Squares
C2 class for making this fix necessary.

Some horrible bugs were fixed.  I thank the Tech Squares C2 class for helping
me find them.

@c ************
@node 35.0, , 35.1, Top
@unnumberedsec Version 35.0 changes

A bug that may have caused printed files to appear as garbage was fixed.
The files themselves would not have been corrupted, and printing by other means
would have worked.

A bug in the @kbd{anchor} concept was fixed.

The program is now compiled with Gcc.

@bye
