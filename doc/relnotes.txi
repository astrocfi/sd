\input texinfo @c %**start of header -*-texinfo-*-
@setfilename relnotes.info
@settitle Sd Release Notes
@c Time-stamp: <3 Mar 2017 wba>
@iftex
@headings off
@oddheading @| @| @thispage
@evenheading @thispage @| @|
@finalout
@end iftex
@c %**end of header

@set title1 RELEASE NOTES FOR VERSION 38.92
@set title2 Database version = 38.92 format = 338
@set title3 parser version 1.13, X11 UI version 1.17, SD UI version 4.10

@node Top, Intro, (dir), (dir)

@menu
This file documents the user-visible changes in the current and recent
versions of the Sd program.

* Intro::               Information about the current version

Changes as of the following versions:
* 38.92::
* 38.91::
* 38.90::
* 38.89::
* 38.88::
* 38.87::
* 38.86::
* 38.85::
* 38.84::
* 38.83::
* 38.82::
* 38.81::
* 38.80::
* 38.79::
* 38.78::
* 38.77::
* 38.76::
* 38.75::
* 38.74::
* 38.73::
* 38.72::
* 38.71::
* 38.70::
* 38.69::
* 38.68::
* 38.67::
* 38.66::
* 38.65::
* 38.64::
* 38.63::
* 38.62::
* 38.61::
* 38.60::
* 38.59::
* 38.58::
* 38.57::
* 38.56::
* 38.55::
* 38.54::
* 38.53::
* 38.52::
* 38.51::
* 38.50::
* 38.49::
* 38.48::
* 38.47::
* 38.46::
* 38.45::
* 38.44::
* 38.43::
* 38.42::
* 38.41::
* 38.40::
* 38.39::
* 38.38::
* 38.37::
* 38.36::
* 38.35::
* 38.33::
* 38.32::
* 38.31::
* 38.3::
* 38.2::
* 38.1::
* 38.02::
* 38.01::
* 38.0::
* 37.84::
* 37.83::
* 37.82::
* 37.81::
* 37.8::
* 37.7::
* 37.6::
* 37.5::
* 37.4::
* 37.3::
* 37.2::
* 37.1::
* 37.0::
* 36.81::
* 36.8::
* 36.7::
* 36.64::
* 36.63::
* 36.62::
* 36.61::
* 36.60::
* 36.59::
* 36.58::
* 36.57::
* 36.56::
* 36.55::
* 36.54::
* 36.53::
* 36.52::
* 36.5::
* 36.4::
* 36.3::
* 36.1::
* 36.0::
* 35.1::
* 35.0::

The files @file{relnotes03.txi} and @file{relnotes98.txi} have
notes relating to even older versions.
@end menu

@node Intro, 38.92, Top, (dir)

@center @titlefont{@value{title1}}@*
@center @value{title2}@*
@center @value{title3}@*

@w{ }@c the @* above makes the @sp below fail without this line  1998-05
@sp 2
@noindent Copyright @copyright{} 1996-2017 William B. Ackerman
@sp 3
@menu
* 38.92::               Changes in the current version
@end menu

@c ************
@node 38.92, 38.91, Intro, Top
@unnumberedsec Version 38.92 changes

The @strong{randomize couple colors} command may only be given at the start of a sequence, that is, just before the @strong{heads starts}, or whatever, command.  You can't change the colors of the icons in the middle of a sequence.  As a reminder, random couple coloring is enabled with the @strong{-hide_couple_numbers} switch at startup.

New meta-concept: @strong{randomize between}.  This is followed by two concepts (or compound concepts like @strong{phantom tandem} or @strong{parallelogram split phantom lines}), followed by more text (which might involve still more concepts).  The parts of the subject call will be performed alternately with the first concept and the second one.  You do not need to press <enter> between concepts.  Do not type any special punctuation or "and"; just type the concepts, as in

@strong{randomize between cross concentric as couples flip back}

The program will figure out the concept groups and put in the necessary delimiters for you, as in

@strong{RANDOMIZE BETWEEN CROSS CONCENTRIC AND AS COUPLES, flip back}

If you don't agree with where Sd thinks the concept boundaries are, don't call it.

Another meta-concept: @strong{triple randomize among}.  This takes three concepts and cycles through them in sequence over the parts of the call.

New concepts: @strong{paranoid} and @strong{<anyone> are paranoid}.  The designated people (or everyone) turns back at the conclusion of the call.  If a designator such as @strong{centers} is used, it is evaluated after the call.

@c ************
@node 38.91, 38.90, 38.92, Top
@unnumberedsec Version 38.91 changes

It can now do @strong{ends promenade N/4} (in the sense of @strong{heads promenade halfway, come into the middle and ...}) when in a "rigger", 1/8, or 1x8-with-centers-lockit setup.

A bug was fixed in @strong{cast back}.

It can handle fractions given to @strong{echo} constructions.  For example, @strong{do the last 3/4, echo <concept>} means do the last half of the call with the concept, then the full call without it.

@c ************
@node 38.90, 38.89, 38.91, Top
@unnumberedsec Version 38.90 changes

Improved ability to get out of thars, the importance of which is increased with the addition of @strong{flip the galaxy} and @strong{cut the galaxy} at C1.

Allow @strong{ripple} in 3-person lines.

Fixed @strong{pass in} and @strong{pass out} so that they really turn toward or away from the center
of the set or the center of the explicitly named subformation.

Fixed misleading/incorrect information in transcript file after concepts like @strong{center 2/outer 6}.

The @strong{stretch} concept takes a 4-person call, with preference for a 2x2 splitting, same as @strong{central} or  @strong{crazy}.  This means that, for example, from waves, @strong{stretch counter rotate} will do a @strong{stretch split counter rotate}.

The call @strong{double cross} has been moved to A1, in accordance with a recent change from Callerlab.

When it sees a @strong{promenade} getout from 2-faced lines, in addition to indicating that getout as before, it can also display it as a "circulate, bend the line" getout, as in @strong{promenade (3/8 promenade, or couples circulate 1-1/2, bend the line, you're home)}.  You may find this helpful, or you may find it annoying.  It is an option, and it is off by default.  You may put the switch "-bend_line_home_getouts" in the invocation of the program, or the line "bend_line_home_getouts" in the "[Options]" section of your @file{sd.ini} initialization file.  You can also switch this on or off at any time with the @strong{toggle bend line home getouts} command.

New concept: @strong{<anyone> paranoid}.

Ability to handle unsymmetrical @strong{chain reaction} was improved.

@c ************
@node 38.89, 38.88, 38.90, Top
@unnumberedsec Version 38.89 changes

Moved @strong{triple cross} to the A1 program, as per the decision of Callerlab.

Moved @strong{flip the galaxy} and @strong{cut the galaxy} to the C1 program, as per the decision of Callerlab.

@c ************
@node 38.88, 38.87, 38.89, Top
@unnumberedsec Version 38.88 changes

Further improvements to crossfire.

Improvements to percolate.

Improved ability to use WORK and ARE interchangeably in things like INSIDE TRIANGLES WORK THREESOME or INSIDE TRIANGLES ARE THREESOME.

@c ************
@node 38.87, 38.86, 38.88, Top
@unnumberedsec Version 38.87 changes

Changed the levels of some calls in accordance with the Callerlab Triennial review.

Fixed the behavior of @strong{crossfire}.  Those who traded step ahead.  Those who cross folded do not.

Fixed the allowable starting positions for @strong{plan ahead}.

Fixed a bug in fractionalization of @strong{mini busy}.

Fixed a bug in @strong{CRAZY}.

Fixed a bug in @strong{cast off 1/8} and @strong{cast off 3/8} with a designator.

@c ************
@node 38.86, 38.85, 38.87, Top
@unnumberedsec Version 38.86 changes

The handling of @strong{right roll to a wave} and @strong{latch on} was changed, in accordance with the definitions.
@strong{latch on}, and @strong{leads latch on} (they're the same thing), are legal when the two people are facing.
@strong{right roll to a wave}, and @strong{leads right roll to a wave} (they're the same thing), require that at least one person be a lead.

Improved @strong{swing chain thru}.

Improved the handling of the meta-concepts @strong{FIRST M/N <concept>}, @strong{MIDDLE M/N <concept>}, @strong{LAST M/N <concept>}, and @strong{HALFWAY <concept>}.

These may be used with concepts that manipulate the parts of the subject: @strong{REVERSE ORDER}, @strong{M/N}, and @strong{DO THE LAST M/N}.

When the latter concepts are used with a meta-concept that picks out a specific part, as in @strong{INITIALLY REVERSE ORDER settle back}, it picks out the first part and applies the concept to the parts of that picked-out part.  That is, it does the @strong{reset} in reverse order: @strong{hinge}, @strong{1/2 zoom}, @strong{hinge}, @strong{1/2 zoom}.

But when they are used with a meta-concept that selects a @emph{range}, of the target call, the indicated concept acts directly on that range, not on any particular subcall.  So @strong{HALFWAY 1/2 reset} does @strong{1/2 zoom}, @strong{1/2 zoom}, @strong{hinge}.  @strong{FIRST 3/5 REVERSE ORDER, swing the fractions} does turns of 3/4, 1/2, 1/4, 1/2, and 1/4.

@c ************
@node 38.85, 38.84, 38.86, Top
@unnumberedsec Version 38.85 changes

Fixed obscure case of @strong{jay walk} (or @strong{jay <anycall>}).  In some cases, this call can be very complex.  An example is @strong{boys jay walk} from a normal starting DPT.

Made improvements to @strong{swing-o-late}, @strong{alter and circulate}, @strong{counter}.

@c ************
@node 38.84, 38.83, 38.85, Top
@unnumberedsec Version 38.84 changes

Fixed a number of minor problems, relating to

@strong{3x3 counter rotate},
@strong{swing and circle},
@strong{dixie diamond},
@strong{1/2 U-turn back},
@strong{Z axle},
@strong{couple up},
@strong{tally ho},
@strong{(scatter) scoot to a wave},
@strong{hocus pocus} with the outsides going an odd number of quarters,
@strong{lead beaus} etc.,
@strong{checkerboard} going into and out of phantom formations,
very long resolve diagnostics,
very long inserted comments,
@strong{left touch 1/4} in offset lines,
unsymmetrical @strong{near 3} etc.,
@strong{[those facing pass thru] and circle 1/4},
@strong{[stretched wave 2/3 recycle] er's coordinate},
@strong{delight/dilemma},
@strong{wheel and <anything>}

The call @strong{swing and circle 1/4} has 2 parts.  The first is @strong{swing} in the wave.  The second is @strong{slip} in the wave while the outer 6 do what needs to be done.  For @strong{<anything> and circle 1/4} there are also 2 parts.  The first is @strong{<anything>}.  The second is just the outer 6 do what needs to be done.

The calls @strong{swing and circle N/4} and @strong{<anything> and circle N/4}, for values of @strong{N} greater than 1, have @strong{N} parts, each of which has 2 sub-parts.

@c ************
@node 38.83, 38.82, 38.84, Top
@unnumberedsec Version 38.83 changes

Fixed a number of minor problems.

@c ************
@node 38.82, 38.81, 38.83, Top
@unnumberedsec Version 38.82 changes

In accordance with a vote of the Callerlab Advanced Committee,
@strong{triple cross} has been moved from C1 to A2.  As of this writing,
it is not yet on the official A2 list.  You should workshop it before
calling it.

Improved handling of unsymmetrical setups.

Improved tricky cases of once removed 3x1 triangles in a 2x6.

Fixed bug in @strong{clover and} and @strong{wheel and}.

In accordance with the Callerlab Applications Review Committee, it is
legal to call @strong{crossfire} from a wave.  The result is a 2x4,
because colliding people always spread outward from the center.  Be
warned: "The definition allows for this application; however, the ending
position is extremely unusual and the Committee cautions its use."

@c ************
@node 38.81, 38.80, 38.82, Top
@unnumberedsec Version 38.81 changes

This version was withdrawn because of a bug.

@c ************
@node 38.80, 38.79, 38.81, Top
@unnumberedsec Version 38.80 changes

Fix to @code{bounce} and @code{1/2 circulate}.

@c ************
@node 38.79, 38.78, 38.80, Top
@unnumberedsec Version 38.79 changes

Better handling of setups on a 45 degree angle, and the fractional calls
that get into and out of such setups.  This handles the 45 degree things
that were called in the competition at the 2015 National Square Dance
Convention, and the logical consequences of them.  Such manipulations
will be marked "controversial".  If you don't agree with these, you are
welcome not to use them.

A new command-line switch has been added, to facilitate running on operating systems in which
one does not have control over the program's current directory.  The output files are normally written to
the current directory.  This can be changed with the "-output_prefix <directory>" switch when
invoking Sd or Sdtty.  The given directory argument will be prepended to the transcript filename
(e.g. 01mar15_c2.txt).  The given directory argument should be a fully qualified pathname, followed
by the appropriate separator character: "/" or "\".  So an argument of "-output_prefix /home/wba/sd/"
will cause the transcript file to be "/home/wba/sd/01mar15_c2.txt".

The command "change output prefix" may be given while the program is running, having the
same effect.

This switch may also be put in the "[options]" section of the initialization file, "sd.ini",
without the leading hyphen.

@c ************
@node 38.78, 38.77, 38.79, Top
@unnumberedsec Version 38.78 changes

Can handle difficult fractions leading to 45-degree setups, as in @code{5/8 left swing thru}
or @code{3/4 left swing the fractions}.

@c ************
@node 38.77, 38.76, 38.78, Top
@unnumberedsec Version 38.77 changes

Improved ability to handle @code{squeeze}.

Fix @code{reverse dixie style} in a left-handed 1/4-tag.

@c ************
@node 38.76, 38.75, 38.77, Top
@unnumberedsec Version 38.76 changes

Revamped the way @code{Z}'s are handled.  Sd can now correctly do things like @code{Z counter rotate} and @code{Z axle}
regardless of the Z's orientation.

Made @code{checkmate the column} legal in an 8-chain setup.

@c ************
@node 38.75, 38.74, 38.76, Top
@unnumberedsec Version 38.75 changes

The bug in @code{Z counter rotate} was fixed.  That is, it applies the
actual @code{Z} concept.  To rotate the Z rigidly as a 2x3, use
@code{EACH Z counter rotate}.  @code{Z} names a concept.  @code{EACH Z}
names a formation.

Improved tha @code{jay} concept to allow 3x4 matrix positions.

@c ************
@node 38.74, 38.73, 38.75, Top
@unnumberedsec Version 38.74 changes

Improved the @code{stretch} concept and the @code{blocks} concept.

@c ************
@node 38.73, 38.72, 38.74, Top
@unnumberedsec Version 38.73 changes

Fixed bug in @code{lift off}.

@c ************
@node 38.72, 38.71, 38.73, Top
@unnumberedsec Version 38.72 changes

Moved @code{triple boxes working together}, and similar concepts, from C4A to C3.

New concepts: Now that there is support for recognizable last parts of
calls, these concepts have been added: @strong{skip the last part},
@strong{use for the last part}.  An example of the second of these is
@strong{use recycle for the last part: swing the fractions}.  To do this,
enter the concept @strong{use for the last part}, and follow the prompts.

Fixed bug in @strong{crazy} identification in a Dunlap Hourglass.

Fixed bug in @strong{once removed} with colliding calls.

@strong{Lift off} is now supported if the couple facing out have pressed ahead to squared-set spots.

Fixed complex cases of @code{remake}.

Fixed bug in @code{FRACTAL spin chain the line}.

@c ************
@node 38.71, 38.70, 38.72, Top
@unnumberedsec Version 38.71 changes

Fixed embarrassing bug involving disappearance of the #2 boy.

Improved ability to @strong{jay walk} and @strong{U-turn back}.

Improved ability to handle parts.  The program now knows about calls (like @strong{relay the deucey})
that have a recognizable first part and a recognizable last part, but no usable fractionalization in between.

@c ************
@node 38.70, 38.69, 38.71, Top
@unnumberedsec Version 38.70 changes

The call @strong{do the centers part of load the boat} is now recognized as a call in its own right, at Plus.
No other @strong{do the centers part of ...} calls are planned, because the capacity for abuse is too high.
If you really want such a thing, toggle concept levels and use the @strong{central} concept

New tagging ending: @strong{<ATC> er's motion}.  Tag all the way through; first go left, next go right, as in the
end of @strong{sets in motion}.

The @strong{mimic} concept was improved.

There is more support for unsymmetrical couples and siamese operations.

@c ************
@node 38.69, 38.68, 38.70, Top
@unnumberedsec Version 38.69 changes

Minor tweak.

@c ************
@node 38.68, 38.67, 38.69, Top
@unnumberedsec Version 38.68 changes

The roll behavior after things like @strong{wheel the ocean} is correct.

The parser was changed to address the @strong{6x2 acey deucey} problem.  The call appears as such in the menu,
but typing, for example, @strong{echo 6x2 acey deucey} will get the correct result.

@c ************
@node 38.67, 38.66, 38.68, Top
@unnumberedsec Version 38.67 changes

Several more @strong{... but <anything>} endings were added to calls that finish with the centers casting off 3/4.

The @strong{1/2 drift apart} failure was fixed.

The @strong{centers work 2/3, all 8 recycle} failure was fixed.

The calls @strong{zig} and @strong{zag} were added.  These have the leads turn in the designated direction
while the trailers do nothing.  They are legal from 3/4 tag formations, applying only to the outsides.

@c ************
@node 38.66, 38.65, 38.67, Top
@unnumberedsec Version 38.66 changes

@strong{6x2 acey deucey} and @strong{3x2 acey deucey} are now treated as instances of the "6x2" and "3x2" concepts.
@strong{3x2 reshape} and @strong{3x2 convert} are still calls in their own right.

Fixed identification of @strong{beaus}, @strong{belles}, @strong{leads}, and @strong{trailers} in 1/4 tags or diamonds.
This applies only to the centers by themselves, and the outsides by themselves.  So, for example, and a normal 1/4 tag,
there are 6 beaus and 2 belles, but there are no leads or trailers.

@strong{4x4 load the boat} (and 3x3, 3x1, and 1x3) are implemented.  We apologize for not having implemented this
beautiful and fun call earlier.

@strong{vertical [anything]} now fractionalizes properly.

The @strong{split phantom lines 3x1 as couple split swap} bug, and others of its ilk, were fixed.

@c ************
@node 38.65, 38.64, 38.66, Top
@unnumberedsec Version 38.65 changes

Some @strong{generous} and @strong{stingy} improvements were made.

@noindent The handling of @strong{melded} was improved.

@noindent More singing call getouts are recognized.

@c ************
@node 38.64, 38.63, 38.65, Top
@unnumberedsec Version 38.64 changes

Moved call levels to adhere to the rule that C4A is those things on
Richard Tuck's teach order up through week 4, and anything higher is
c4.

Various minor fixes were made to such things as @strong{scatter circulate},
@strong{locker's choice}, @strong{swing along}, @strong{stretch travel thru}.

@c ************
@node 38.63, 38.62, 38.64, Top
@unnumberedsec Version 38.63 changes

Fixed the behavior of @strong{mimic} with @strong{counter rotate}.

Fixed @strong{generous} and @strong{stingy} with @strong{follow thru}.

Made the @strong{mimic} concept properly enforce the ambiguity rules.
If an application is ambiguous without the @strong{of lines} or @strong{of columns}
designation, it is illegal.

@c ************
@node 38.62, 38.61, 38.63, Top
@unnumberedsec Version 38.62 changes

The just-completed changes to the C3 list were incorporated.

Many, but not all, calls on the "c3x" program were moved to c4a or c4.
The general rule was that things on Richard Tuck's teach order up
through week 4 were c4a, and anything higher was c4.

There is a startup switch "-no_c3x" that, when used with an invocation of c4a or higher,
rejects c3x calls, even though such calls are nominally considered lower than c4a.

The misbehavior of the @strong{mimic} concepts in combination with the @strong{couples/tandem} concepts was fixed.

The @strong{triple lines step and slide} bug was fixed.

Various problems with @strong{detour}, and counter rotate in general, when the centers are in a "Z", were fixed.

The problem with some 2x2 calls in Z's, with the "Z" concept, was fixed.

@c ************
@node 38.61, 38.60, 38.62, Top
@unnumberedsec Version 38.61 changes

New concepts: @strong{offset triple lines/waves/columns}, done from a 4x4.  These may be used with @strong{standard}.
These also support @code{working left/right/forward/backward/clockwise/counterclockwise},
the first two of which can be used with @strong{standard}.

Also: @strong{offset triple boxes}, done from a 2x8.  This also supports
@code{working left/right/forward/backward/together/apart/clockwise/counterclockwise}.

Also: @strong{fifthly}.  (@strong{initially} through @strong{fourthly} were already supported.)

The @strong{parallelogram triple boxes} concept is deprecated.  Do not use it.

@c ************
@node 38.60, 38.59, 38.61, Top
@unnumberedsec Version 38.60 changes

A failure to read command-line arguments correctly in Sd, leading to such things as wrong icon colors, was fixed.
Sdtty was not affected.

Ability to handle things like @strong{team up}, with phantom directions dictated by @strong{assume}
commands, was improved.

@c ************
@node 38.59, 38.58, 38.60, Top
@unnumberedsec Version 38.59 changes

The @strong{melded as couples} and @strong{melded tandem}, along with the twosome variants of same, are now
supported.  The phantom versions of these, as in @strong{melded phantom as couples}, have been supported for some time.

A bug involving very problematical cases of @strong{finally snag the ends} was fixed.

@c ************
@node 38.58, 38.57, 38.59, Top
@unnumberedsec Version 38.58 changes

Many @strong{generous} and @strong{stingy} call variants were added.

The source files were improved further for robustness with a variety of compilers and operating systems.

@c ************
@node 38.57, 38.56, 38.58, Top
@unnumberedsec Version 38.57 changes

The call @strong{top it off} has been removed.

A bug in fractional stable @strong{coordinate} was fixed.

The program is better able to handle space-invading calls like @strong{loop} in general 1/4 tag setups.

Various minor improvements were made, including @strong{generous} and @strong{stingy} in certain chopped-up versions of @strong{perk up} and @strong{pass and roll}.

The source files were made more robust for use with a variety of compilers and operating systems.

@c ************
@node 38.56, 38.55, 38.57, Top
@unnumberedsec Version 38.56 changes

The @strong{finally twice rims trade back} bug was fixed.

The bug in bits and pieces in the presence of phantoms was fixed.

A @strong{cast back} leading to an hourglass works properly.

@c ************
@node 38.55, 38.54, 38.56, Top
@unnumberedsec Version 38.55 changes

A serious bug was introduced in version 38.52.  This fixes it.

New calls: @strong{in point triangle circulate}, @strong{out point triangle circulate},
@strong{in point triangle chain thru}, @strong{out point triangle chain thru}

@c ************
@node 38.54, 38.53, 38.55, Top
@unnumberedsec Version 38.54 changes

The @strong{melded phantom} concepts now support the @strong{twosome},
@strong{fractional twosome}, and @strong{twosome fractional solid} forms.

@c ************
@node 38.53, 38.52, 38.54, Top
@unnumberedsec Version 38.53 changes

There is (possibly incomplete) support for the @strong{melded phantom as couples}
and @strong{melded phantom tandem} concepts.

@c ************
@node 38.52, 38.51, 38.53, Top
@unnumberedsec Version 38.52 changes

Sd does a better job with distorted boxes in butterflies and O's.

Sd can handle "diagonal lines/waves/columns" in a butterfly.

The call @strong{separate} is now handled much more closely to the Callerlab definition.

The @strong{as couples roll} bug was fixed.

The @strong{wave of 6 grand swing thru} bug, after @strong{3/4 motivate}, was fixed.

@c ************
@node 38.51, 38.50, 38.52, Top
@unnumberedsec Version 38.51 changes

Fixed bugs in @strong{3x3 rotate}.

Minor improvements in handling of weird calls with triangles.

@c ************
@node 38.50, 38.49, 38.51, Top
@unnumberedsec Version 38.50 changes

New call: @strong{top it off}, listed as Plus.  From a tidal wave, all
trade, center 6 arm turn 3/4 while the outer 2 counter rotate to become
ends of center line, while outside person facing out does a U-turn
back.  You must workshop this call before using it.  Whether it will get
adopted as a legitimate call is unknown.

The call @strong{wheel and spread} is now flagged as "controversial".  There's actually no such call.

The roll direction for the belle in @strong{cross and turn} is now dependent on roll direction.

Improved ability to do @strong{<ANYONE> trade}.

Improved ability to roll after @strong{Swing the Fractions}.

Slightly improved ability to do things at a 45 degree angle.

@strong{Scoot and Ramble} has 2 parts.  @strong{Ramble} also has 2 parts.

Improved ability to do @strong{Crazy Z's}.

Improved ability to do triangles.

New designators: @strong{line/column/box on the caller's left/right}, analogous to @strong{near line}, etc.

From a "star promenade", @strong{press ahead} and @strong{1/2 press ahead} both go to a "C1 phantom" setup.  The result is the same whether or not "1/2" is used.

Improvements in the ability to do @strong{dixie grand} from various arrangements of alamo rings or "O" spots. 

If writing an abridgement file at C4, calls at C4A will be listed also.
That is, the students will be assumed to know C3X, but not C4A.  C4A
calls will have to be deleted from the abridgement file, same as C4
calls.  This may not be the final correct solution to this problem.

There were the usual other minor improvements.

@c ************
@node 38.49, 38.48, 38.50, Top
@unnumberedsec Version 38.49 changes

The action of the people who spread to become ends of lines on @strong{relay the shadow} is a @strong{hinge}.  It is not an arm turn, nor a cast off 1/4.  Furthermore, it is not legal to apply @strong{fractal} to it if the people are not in a miniwave.  The Callerlab definition describes it as a @strong{single hinge}, but Sd relaxes that to a @strong{hinge}.  The antique definition of this call is quite different, of course.

Sd has a slightly improved ability to do things on a 45 degree angle.

There were a few other minor improvements to execute certain calls more accurately.

@c ************
@node 38.48, 38.47, 38.49, Top
@unnumberedsec Version 38.48 changes

This release fixes a few bugs.  You might recognize yours.  Specifically:

The @strong{1/2 exchange the diamonds} bug from unusual facing directions.

The @strong{parallelogram shape-changer} bug from 2x5 or 2x7 matrices.

The @strong{magic hocus-pocus} bug.

The @strong{galaxy quick change} bug.

The @strong{own the <anyone>, follow to a diamond by trail off} bug.

The @strong{ends are tandem, grand swing thru} bug.

@c ************
@node 38.47, 38.46, 38.48, Top
@unnumberedsec Version 38.47 changes

Modifying the "swing/slip" of @strong{swing and circle <N/4>} by giving
the @strong{allow modifications} command is no longer supported.  Simply
enter it with the subcall in square brackets, as in @strong{[switch to a
diamond] and circle 1/4}.

Sd has a better understanding of the parts of @strong{swing and circle
1/4}.  The second half has the outer six circulate while the center two
finish the swing thru.

Sd can better handle complex cases of fractions, parts, and
meta-concepts, such as @strong{7/10 fourthly tandem swing the
fractions}.

@c ************
@node 38.46, 38.45, 38.47, Top
@unnumberedsec Version 38.46 changes

The @strong{<anyone> in your staggered wave} (or line, column, or box)
concept is allowed, at C2, in the center phantom lines spots of a
stagger formation, even though it is only allowed at c3a in a general
2x4.

Sd can handle once-removed 3x1 triangles better in the 3x6 obtained by
doing a @strong{once removed 1/2 here comes the judge} from a suitable
tidal line.  This includes @strong{once removed reverse cut the 3x1
triangle}.

Sd correctly identifies the two parts of @strong{circle by}.

Sd's handling of mixed fractions and parts concepts was improved, as
in @strong{do the last 3/4 4/5 fourthly 1/2 swing the fractions}.

Sd's interpretation of @strong{center column of 6} has been loosened to
reflect common usage.  Strictly speaking, and column of N is a 1xN
formation, so, for example, the setup obtained after @strong{touch 1/4}
from facing lines is two columns, just as the setup prior to the
@strong{touch 1/4} was two lines.  Hence, @strong{center column of 6}
normally refers to a 1x6 column, as in @strong{center column of 6, girls
are tandem, pass and roll}.  However, it is common to use this phrase
when referring to the 2x3 obtained after, for example, @strong{1/2
circulate} or @strong{invert the column 1/4} from normal columns.  Sd
now accepts that terminology.

The interpretation of certain oddly oriented triangles has been
tightened.  This would occur on, for example, @strong{ends are tandem
reshape the triangle} from waves.  Formerly, the triangles overlapped
somewhat, and left a nice-looking, albeit incorrect, result.  Now the
result isn't as nice, but the triangles do not overlap.

@c ************
@node 38.45, 38.44, 38.46, Top
@unnumberedsec Version 38.45 changes

A number of bugs were fixed.  These include the @strong{generous/stingy
scatter follow to a diamond} bug and the @strong{finally centers 2/3
cross cycle} bug.

A wider variety of facing directions are allowed for @strong{ends bend}.

@c ************
@node 38.44, 38.43, 38.45, Top
@unnumberedsec Version 38.44 changes

A number of bugs were fixed.  These include the "release" bug, the "phantom clean sweep" bug, the
"phantom single scoot and trade" bug, and the "tandem twosome turnstyle" bug.

@c ************
@node 38.43, 38.42, 38.44, Top
@unnumberedsec Version 38.43 changes

A number of bugs were fixed.  These include the "diamond siamese breakdown" bug and the "phantom long trip" bug.
Sd handles @strong{stingy} and @strong{generous} better.

@c ************
@node 38.42, 38.41, 38.43, Top
@unnumberedsec Version 38.42 changes

The call @strong{<anyone> run 1-1/2} has been removed.  That particular
call, entered that way, did not re-evaluate the @strong{<anyone>}, which
is inconsistent with the way re-evaluation is done in multiple calls.
To make matters worse, the call @strong{1-1/2 <anyone> run}, entered
that way because of Sd's convention that concepts always come first,
would automatically be turned into @strong{<anyone> run 1-1/2} in the
transcript, since that is the more natural way to call it.  Hence the
transcript would be ambiguous---one couldn't tell from looking at the
transcript which interpretation was intended.

If you really want the same person to do both the @strong{run} and the
@strong{1/2 run}, use a designator that doesn't change, such as @strong{girls}
or @strong{sides}.

A bug in @strong{bent boxes} was fixed.

It now does a better job with unesthetic cases of @strong{exchange the boxes 1/2} from lines.

It can better handle @strong{1/2 circulate} from T-boned 2x3 setups.

It can handle perverse coordinates better.

It is believed that it will work better with Osamu Kawamura's program "SDReader".
(See @uref{http://ww52.tiki.ne.jp/~o_kawamura/index.html}.)  That is, after a note about
the setup being 45 degrees off from the picture, the next line should not get swallowed.
We thank Osamu, and Alf Berg, for bringing this to our attention.

Numerous other problems were fixed.

@c ************
@node 38.41, 38.40, 38.42, Top
@unnumberedsec Version 38.41 changes

Two new calls, both at mainstream:  @strong{step to a wave} is the same as @strong{touch}.
@strong{U-turn back in roll direction} does what it says.  The call @strong{U-turn back}
turns toward partner where possible, even if the roll direction is the other way.  We
do not know just how to interpret the phrase "unless the body flow dictates otherwise" in the
Callerlab definition---it seems to suggest that it might not always be the same as the last
turning direction (that is, the roll direction), so we allow the user to choose which call to use.

New concept: @strong{roundtrip}, at C3X.  This is most easily explained by example:  @strong{swing the fractions}
is the same as @strong{roundtrip remake}.  The @strong{roundtrip} of a call is the call followed by the reverse
order of the call without its last part.  The @strong{roundtrip} of an N-part call has 2N-1 parts.

The @strong{tandem U-turn back} bug was fixed.

@c ************
@node 38.40, 38.39, 38.41, Top
@unnumberedsec Version 38.40 changes

The calls @strong{square the bases, new centers to a wave} and
@strong{percolate, <anyone> to a wave} were moved from C2 to C1.

There is better handling of the @strong{all 8} concept.

The @strong{stingy}, @strong{generous} and @strong{fractal} concepts were improved.

The handling of @strong{percolate} and @strong{perk up} in the presence of phantoms was improved.

The @strong{touch by} bug was fixed.

The @strong{3x2 acey deucey} bug was fixed.

The @strong{2x6 matrix grand swing thru} bug was fixed.

The @strong{side boys run in a dog-bone} bug was fixed.

@c ************
@node 38.39, 38.38, 38.40, Top
@unnumberedsec Version 38.39 changes

Many more improvements were made to the @strong{stingy} and @strong{generous} concepts.

@c ************
@node 38.38, 38.37, 38.39, Top
@unnumberedsec Version 38.38 changes

The ability to do the @strong{stingy} and @strong{generous} concepts has been further improved.

It is not legal to apply more than one of @strong{stingy}, @strong{generous}, @strong{yoyo}, or @strong{fractal}
to the same action.  But things like @strong{finally stingy generous 1/4 thru} are legal, because
the concepts apply to different parts.

@c ************
@node 38.37, 38.36, 38.38, Top
@unnumberedsec Version 38.37 changes

The ability to do the @strong{stingy} and @strong{generous} concepts has been much improved.

There are several new concepts to facilitate designating certain people to work together as couples or tandems, or couples or tandems of 3:

@strong{the (couples/tandems) are solid}

@strong{the (couples of 3/tandems of 3) are solid}

@strong{the (couples/tandems) are solid N/4 twosome}

@strong{the (couples of 3/tandems of 3) are solid N/4 threesome}

@strong{the (couples/tandems) are twosome}

@strong{the (couples of 3/tandems of 3) are threesome}

@strong{the (couples/tandems) are twosome N/4 solid}

@strong{the (couples of 3/tandems of 3) are threesome N/4 solid}

These are used when it is possible to determine who are selected based
on facing directions.  For example, in a quarter box (@strong{heads
touch 1/4}) setup, one can do @strong{the tandems of 3 are solid, pass
the ocean}.  Who comprise the tandems of 3 can be determined from facing
directions.

These are equivalent to the existing designator "@strong{some}", as in
@strong{some are tandems of 3, pass the ocean}.  This designator can be
used to select people, that might otherwise be difficult to name, by
using their facing directions.

When people can't be identified by their facing directions, it is also
possible to use the designators @strong{first 1}, @strong{first 2}, or
@strong{first 3}, from columns, or @strong{last N}, or, from lines,
@strong{leftmost N} or @strong{rightmost N}.

@c ************
@node 38.36, 38.35, 38.37, Top
@unnumberedsec Version 38.36 changes

The program is much better at doing things that turn people by 45 degrees.

The program is more careful about @strong{<anyone> *work* tandem}
vs. @strong{<anyone> *are* tandem} (and as couples, siamese, etc.)  The
word "are" is almost always what you want.  It combines the indicated
people from their couple or tandem into a single virtual person, changes
the virtual setup to a smaller setup in response to that, and does the
call.

In contrast to that, @strong{<anyone> work <concept> <call>} is
done as though it were @strong{<anyone> do your part, <concept> <call>,
while the others just do the <call>}.

The program will automatically do @strong{<anyone> work tandem} as
though it were @strong{<anyone> are tandem}, except in the small number
of cases in which that won't work.

@c ************
@node 38.35, 38.33, 38.36, Top
@unnumberedsec Version 38.35 changes

The call @strong{kickoff} was brought into compliance with the current Callerlab definition.  The non-desgnees
only partner tag if an active person is kicking into their spot.

The @strong{stingy} and @strong{generous} concepts were improved.

@c ************
@node 38.33, 38.32, 38.35, Top
@unnumberedsec Version 38.33 changes

The program can handle many more unsymmetrical things, such as, from columns, @strong{near 4 follow to a diamond},
@strong{near 3 reshape the triangle while the others funny circulate}.

The result of a @strong{cross by} from parallel waves is now a center wave between two miniwaves, in accordance
with the Callerlab definitions.  The program still allows multiple @strong{cross by}'s
(and multiple @strong{slip the clutch}'s) after doing this, which Callerlab does not.

The call @strong{kickoff} was modified to be consistent with the current Callerlab definition.  One only does
the partner tag if an active person is coming to one's spot.

The @strong{overlapped siamese} concept was improved.  See the section for version 37.81.

@c ************
@node 38.32, 38.31, 38.33, Top
@unnumberedsec Version 38.32 changes

It is now possible to say, from any squared-set or alamo spots (not just at the start of a sequence), things like:

<anyone> promenade halfway, come in to the middle and <anything>

<anyone> promenade halfway, while the others <anything>

<anyone> promenade <N/4>, come in to the middle and <anything>

<anyone> promenade <N/4>, while the others <anything>

<anyone> [reverse] [single] rotate <N/4> while the others <anything>

<anyone> bring us together

However the people were designated, they must be at head or side positions.  It may be necessary to issue the @strong{adjust alamo to other pairing} call to set this up.

It is now possible to modify (with "allow modifications") the first
@strong{cast off 3/4} of @strong{motivate} and @strong{relay the top}.  You can also use the "but" convention
to modify the last @strong{cast off 3/4}.

A number of bugs were fixed and minor improvements made.

@c ************
@node 38.31, 38.3, 38.32, Top
@unnumberedsec Version 38.31 changes

The designator @strong{intermediate diamond} has been changed to @strong{middle (intermediate) diamond}.
The word "intermediate" in parentheses is there to prevent any possible ambiguity on the written sequence.
Below about C3A, you don't need to type the "(intermediate)".  Just type "middle" followed by <enter> or <tab>,
and command completion will finish it for you.  The three designators for the diamonds formed by a @strong{1/2 acey deucey}
are @strong{center diamond}, @strong{middle (intermediate) diamond}, and @strong{outside diamond}.

New (unsymmetrical) direction:  @strong{the music}, meaning toward the caller.

New (unsymmetrical) designators:  @strong{near 2}, @strong{near 6}, @strong{far 2}, @strong{far 6}.  Sd aleady
recognizes @strong{near 4} and @strong{far 4}.

The ability to do hard cases of @strong{touch by} was improved.

New call:  @strong{separate, around <N>, into the middle for a <anything>}.

Some calls have had their levels changed.  @strong{double cross} has been moved to C2.  @strong{double play} and
the @strong{scoot nuclear reaction} variants have been moved to C3.

@c ************
@node 38.3, 38.2, 38.31, Top
@unnumberedsec Version 38.3 changes

In accordance with the new Callerlab lists, @strong{with the flow} has been moved from C2 to C1,
and @strong{interlocked triangles} have been moved from C1 to C2.

New concepts: @strong{stingy}, and @strong{generous}.  These decrease by 1, or increase by 1, respectively,
the first arm-turn cast appearing in the call.

The program has the ability to issue warnings on "overflow", that is, turning with the same hand
on consecutive calls.  @i{The test is extremely sensitive.}  It can be triggered by any amount of
turning at the end of one call and at the beginning, even if the total amount is only 1/4 + 1/4.
It can be triggered by @strong{swing thru} followed by @strong{acey deucey}.
It is disabled by default.  You may turn it on with the "toggle overflow warning" command while
the program is running, or by placing the "-warn_on_overflow" switch in the command-line startup
(for example, in a startup icon) or in the "[Options]" section of the "sd.ini" file.

@c ************
@node 38.2, 38.1, 38.3, Top
@unnumberedsec Version 38.2 changes

The handling of @strong{1/2 ripoff} is slightly different.  When done from a left-handed box,
the people sliding over stay in the center, facing each other directly.  The people doing the 1/2 zoom
become points of the generalized diamond.

The concepts like @strong{parallelogram triple boxes} and @strong{offset lines split phantom lines}
were changed.  The offset percentage is measured at the beginning, before placing phantoms.  The
offset is removed, phantoms are placed, and the call is done.  Phantoms are stripped from the result
at that point, if possible, and then the offset, as a percent of the result of the stripping, is applied.

The @strong{3x0}, @strong{0x3}, @strong{4x0}, and @strong{0x4} concepts are supported.

The call @strong{dixie style to a wave} can be done from a single file starting double pass thru (4x1)
setup, without saying @strong{single file}.  Be aware that, from an 8-person starting double pass thru
(Heads Star Thru) formation, this might be considered ambiguous by actual dancers, because of the
possibility that only the centers are supposed to do it.  Of course, if you just want the centers to do it,
say so.

@c ************
@node 38.1, 38.02, 38.2, Top
@unnumberedsec Version 38.1 changes

There is a new option at startup: "-hide_couple_numbers", intended for practice at sight-resolving from
the colors of the 4 couples.
When this option is used, the couple numbers are not shown in the diagrams.  Only the genders are shown
(with "B" and "G" or the appropriately shaped icon) and the colors.  Furthermore, the colors of the
four couples may be set randomly with the "randomize couple colors" command, to simulate the start of
a new tip.  This gives one practice at memorizing
the primary and secondary couples based only on their color, and resolving based only on that information.
The startup icon "SD hidecouple" has been created for this.  This may be copied to the desktop or start menu.

The manner in which dancers pass each other during circulates from T-boned lines has been refined.  Any original end
will pass outside of any original center, and, if the call is 1/2 circulate, they will take hands accordingly.
Previously, an end facing in and a center facing out were considered to be on the same path, so that they
would pass right shoulders and take right hands if the call was 1/2 circulate.  I thank David Heffron for
bringing this issue to my attention.

The @strong{concentric Z's} concept should be used in preference to the concepts @strong{concentric} and
@strong{Z}.

The @strong{crazy Z's} concept has been added.  It may be used instead of the concept combination
@strong{crazy} and @strong{Z}, though it is not necessary.

There is a better handling of calls like @strong{relay the top} and @strong{motivate} if the first
cast off 3/4 is done by phantoms.  It assumes that the formation is waves at that point.

There are two new concepts: @strong{intermediate diamond} and @strong{outside diamond}.  They are to be
used from a "3x1 diamond" setup (after 1/2 acey deucey from waves), and they identify various diamonds.
One can also use @strong{center diamond}.

A bug in @strong{phantom columns own <anyone>} was fixed.  You know who you are.

@c ************
@node 38.02, 38.01, 38.1, Top
@unnumberedsec Version 38.02 changes

The handling if @strong{1/2 make magic} was improved.

The handling of @strong{1/4 in} and @strong{1/4 out} was improved.

The handling if @strong{interlocked triangles} was improved.

@c ************
@node 38.01, 38.0, 38.02, Top
@unnumberedsec Version 38.01 changes

The handling of @strong{slant <anything> and <anything>} was improved.

The program can handle @strong{1/2 make magic}.

A bug was fixed in @strong{mark time}.

@c ************
@node 38.0, 37.84, 38.01, Top
@unnumberedsec Version 38.0 changes

The handling of @strong{slant <anything> and <anything>} is more powerful, and follows the
current Callerlab definition more closely.  The people doing the second call do not simply move forward
and do the call in their triple line.  They do their part of the call in an 8-person setup that
includes the phantoms behind them.  They then reassemble around the centers as best they can.
An example of this different treatment may be seen in calls like @strong{slant pass the ocean and link up}.
The call may be expressed with either "and" or "by".

@c ************
@node 37.84, 37.83, 38.0, Top
@unnumberedsec Version 37.84 changes

The program does @strong{swing thru} in a wave of 6 as two 3-person calls, since the
definition of this call allows for 3-person waves.  To get the more common 6-person
version, you must say @strong{grand swing thru}.

The meaning of @strong{<anyone> work tandem} was improved, so that those people still
occupy two spots in the formation.  That is, the tandem people and the normal people just
do their part.  This makes certain type of @strong{circulate} calls,
for example, work naturally.

Calls like @strong{dixie style to a wave} allow some people to be single file while others
are not.  Do not say @strong{single file} in this case.

"Sweep" and "flow" operations were improved further.

@c ************
@node 37.83, 37.82, 37.84, Top
@unnumberedsec Version 37.83 changes

The @strong{ends fold} bug, in a parallelogram, was fixed.  The centers do not move.

The call @strong{rotary spin the windmill} has been deprecated.

The program can handle "sweep" or "flow" operations after truck-like calls.

The @strong{offset columns centers swing thru} bug was fixed.

The @strong{split phantom columns flare out to a line} bug was fixed.  We
apologize to the dancers at the 2009 AACE Convention who may have been
inconvenienced by this.

@c ************
@node 37.82, 37.81, 37.83, Top
@unnumberedsec Version 37.82 changes

The handling of the @strong{mimic} concept was improved.  The designators
@strong{ends}, @strong{ends of lines}, @strong{ends of columns},
@strong{centers}, @strong{centers of lines}, and @strong{centers of columns} may
be used.

@c ************
@node 37.81, 37.8, 37.82, Top
@unnumberedsec Version 37.81 changes

There is a new concept, available at C4, @strong{overlapped siamese}.  This is done
from a 2x4, usually one in which people are T-boned.  Each person works either as couples
or in tandem, as if with the other person in his quadrant, regradless of that other person's
facing direction.  Each person's resulting setup is a virtual 2x2 box, and the person
does the call in that box.

@c ************
@node 37.8, 37.7, 37.81, Top
@unnumberedsec Version 37.8 changes

The treatment of @strong{coordinate} from T-boned formations was improved.

Some tricky cases of @strong{1/2 run} were fixed.

The @strong{finally matrix quadruple lines working backward the pulley} bug was fixed.

The @strong{recycle ; plus 2} bug was fixed.

Some bugs were fixed relating to @strong{roll} after a @strong{spread}.

The @strong{initially split phantom columns exchange the boxes 1/4} bug was fixed.

The @strong{finally stable cast off 3/4} bug was fixed.

The @strong{quadruple lines working forward ferris turn and deal} bug was fixed.

It is possible to call @strong{promenade, <anyone> lead for a <anycall>} from 2-faced lines. 
Previously, it had been possible to call @strong{<anyone> lead} from thar-like formations. 
It is now also legal from 2-faced lines, but you must say @strong{promenade}.

@c ************
@node 37.7, 37.6, 37.8, Top
@unnumberedsec Version 37.7 changes

Box-like calls, such as @strong{peel and trail}, are not allowed from triangles at levels below C2.
We apologize to the C1 dancers at Tech Squares who were inconvenienced by this.

The triple column/line/wave concepts, and the interlocked triangle concept, were moved from C2 to C1.

The @strong{mimic} concept was improved somewhat.  It now uses a
reassembly algorithm that is consistent with the paper at
@uref{http://www.lynette.org/mimic.pdf}.  It still handles only belles,
beaus, leads, and trailers.

The handling of alamo vs. "O" spots is better.  It uses the alamo setup more often.
The call @strong{adjust alamo to other pairing} is needed much less often.
There is better handling of dixie grand -- one can go directly to fractional tops, etc.

There is better handling of inhomogeneous unsymmetrical setups: box and diamond, etc.

The call @strong{recycle} was fixed to make it illegal from, for example, back-to-back lines.  It was taking
too literally the "fold/counter rotate/roll" definition.  That definition is now only used if
an actual concept that requires it is used.

The notion that @strong{the gamut} has a distinct first part and can therefore be "finished" was removed.
That is obsolete.

A bug in @strong{initially 1-1/2 rims trade back} was fixed.

A bug that wrongly allowed @strong{hocus pocus} from a butterfly was fixed.

@c ************
@node 37.6, 37.5, 37.7, Top
@unnumberedsec Version 37.6 changes

New concept: @strong{mimic}.  This is less complete than the full version in Sue Curtis's paper
at @uref{http://www.lynette.org/mimic.pdf}.
Note also that it does not use the "merge with phantoms from your setup
only" rule for 4-person setups.
When it has placed the phantoms, going into a 16-person setup, and divided that into two
8-person setups, it keeps those 8-person setups distinct when merging.  However, it does not recognize,
within the 8-person setups, whether the call was actually a 4-person call for the purpose
of merging.
So, for example, from back-to-back lines,
@strong{mimic leads wheel the ocean} goes to waves, not a starting DPT.
This concept is under discussion.

Sd has some understanding of unsymmetrical setups involving, for example, a diamond and a line.
This is not complete.

The @strong{triple boxes working together deuces wild} bug was fixed.

@c ************
@node 37.5, 37.4, 37.6, Top
@unnumberedsec Version 37.5 changes

New concept: @strong{OX} (distorted column.)

New concept: @strong{nose}.  This is less complete than the full version in Masahiro Kurasawa's paper
at @uref{http://www.lynette.org/nose.pdf}.

New call family: @strong{dixie tag}.

New selectors: @strong{the diamond}, @strong{near/far 4}, @strong{nearest/farthest person}.

A bug was fixed in the printout of certain complex combinations.  We thank our
current A2 group for finding this, and apologize to anyone who might have called
something incomple.

An extremely obscure bug was found in the behavior after a
@strong{reconcile} command was completed.  We thank Justin Legakis for
finding this.

The @strong{offset tidal column/line/wave} concept, in a fully offset 2x8, can be used
with shape-changing calls.

Sd can now do a better job with 2-person calls in Z lines or columns.

Sd has a (limited) ability to handle setups involving a diamond placed unsymmetrically within a tidal line.

The "in roll to a wave and roll" bug was fixed.

A bug was fixed in @strong{rally} and @strong{scoot and rally} with phantoms on the outside.

The first and last halves of the call @strong{double pass thru} are recognized.

The call @strong{fan chain the star (T-bone)} has been removed.  Just do @strong{fan chain the star},
but be aware that this might not agree with the "official" definition.

The @strong{funny} concept can be applied to the centers' trade in calls like @strong{acey deucey}
and @strong{hocus pocus}.  This means that people trade only if in a real miniwave or couple, not if
T-boned.  Without this concept, the centers just do their part of a trade.

There is the usual better tracking of phantoms, and various other minor fixes and improvements.

@c ************
@node 37.4, 37.3, 37.5, Top
@unnumberedsec Version 37.4 changes

New concepts: @strong{two-faced}, or @strong{2-faced}.  This will make
the warning go away if a call that normally expects a wave is called
from a two-faced line.

The meaning of "step to a [mini]-wave" was reworked.  See the FAQ file
for details.  Briefly, people always step to right hands (or left hands
if the @strong{left} modifier was given) even if the overall resulting
setup is not a wave.  The various warnings related to this, and to doing
things in a 2-faced line without the @strong{two-faced} concept, were
made more accurate.

The display colors with -no_intensify and -reverse_video were changed to be less intense.

The program will be less likely to be confused by the difference between an alamo ring and "O" spots.

A number of @strong{fractal} calls were improved.

The ability to do things that involve 45 degree rotation was improved.

The "2x5 matrix heads hinge" bug was fixed.

The "echo split phantom waves rims trade back" bug was fixed.

The "mirror split dixie" bug was fixed.

The "unwrap the diamonds" bug was fixed.

The "initially once removed all tie" bug was fixed.

The "finally 1/2 sandwich" bug was fixed.

Modifications to calls like @strong{motivate} now count as concepts for the purpose of @strong{echo}.
That is, @strong{echo [cross back] er's motivate} and @strong{echo in roll motivate} work.

An extremely stupid and embarrassing bug was fixed.  This bug probably
never arose in practice.  Nevertheless, we apologize to anyone who
called something in a T-boned butterfly and found the center 4 rotated
improperly.

Some minor bug fixes were made in calls like @strong{1/2 circulate} and @strong{split counter rotate}.

A marginal/bogus use of extend (1/4 tag spots, miniwaves everywhere) is now allowed.  A warning
is printed, of course.

The call @strong{half sashay} may also be spelled @strong{1/2 sashay}.

Unsymmetrical phantom bend the line, and unsymmetrical fudging of the result to a 4x4 matrix, and various
things that can be done with the result, were improved.

Various 3x3 and 4x4 rotates were fixed.

Unsymmetrical bent lines and bent columns in a 4x4 (clumps) are now allowed.

@c ************
@node 37.3, 37.2, 37.4, Top
@unnumberedsec Version 37.3 changes

@b{MAJOR CHANGE}

New concept family: @strong{dynamic}.  This is a variation of
@strong{twosome}.  Those who are turning to the right work rigidly,
while those who are turning to the left work twosome.  The
@strong{reverse dynamic} works the other way---those who are turning to
the right work twosome, while those who are turning to the left work
rigidly.

The word ``dynamic'' (or ``reverse dynamic'') is grammatically similar
to ``twosome'' (or ``threesome'', ``diamondsome'', etc.)  That is:

@table @code
@item @strong{couples twosome} becomes @strong{couples dynamic}
@item @strong{siamese twosome} becomes @strong{siamese dynamic}
@item @strong{couples threesome} becomes @strong{couples of 3 dynamic}
@item @strong{boxsome} becomes @strong{boxes dynamic}
@item @strong{diamondsome} becomes @strong{diamonds dynamic}
@item @strong{skewsome} becomes @strong{skew dynamic}
@item @strong{gruesome twosome} becomes @strong{gruesome dynamic}
@end table

Fractional solid-to-dynamic and twosome-to-dynamic concepts are also permitted.  Use, for example:

@table @code
@item @strong{couples 1/4 dynamic} @r{or} @strong{couples twosome 1/4 dynamic}
@item @strong{siamese 1/4 dynamic} @r{or} @strong{siamese twosome 1/4 dynamic}
@item @strong{couples of 3 1/4 dynamic} @r{or} @strong{couples threesome 1/4 dynamic}
@item @strong{boxes are solid 1/4 dynamic} @r{or} @strong{boxsome 1/4 dynamic}
@item @strong{diamonds are solid 1/4 dynamic} @r{or} @strong{diamondsome 1/4 dynamic}
@item @strong{skew 1/4 dynamic} @r{or} @strong{skewsome 1/4 dynamic}
@item @strong{gruesome as couples 1/4 dynamic} @r{or} @strong{gruesome couples twosome 1/4 dynamic}
@end table

@b{ANOTHER MAJOR CHANGE}

The program keeps track of ``call usage statistics''.  This operates in the context of the ``sessions'' feature.
A call's ``frequency number'' is the number of times it has been used since the counters were reset.
The new commands are:

@strong{frequency show}---List calls, with frequency numbers.

@strong{frequency show level}---List calls at the current level, with frequency numbers.

@strong{frequency show near level}---List calls at the current level or next lower level, with frequency numbers.

@strong{frequency show sort}---Like @strong{frequency show}, but sort calls by decreasing number.

@strong{frequency show sort level}---Like @strong{frequency show level}, but sort calls by decreasing number.

@strong{frequency show sort near level}---Like @strong{frequency show near level}, but sort calls by decreasing number.

@strong{frequency start}---Set up the statistics counting associated with the current session.

@strong{frequency reset}---Reset all the counters to zero.

@strong{frequency delete}---Terminate the statistics counting.

The statistics are kept in a separate file, which is associated with a ``session''.  This file
persists for as long as the session is defined, so the statistics keep track of all sequences
associated with the session, whenever they were written.

@b{OTHER CHANGES}

There is better handling of combinations of meta-concepts.  For example, it can do
@strong{finally initially tandem reverse order settle back}.

It can do a better job of handling unsymmetrical cases of the @strong{those facing} selector.

It has a more precise notion of how to know where missing outsides went.

It has better handling of @strong{roll} information when doing @strong{checkerboard} concepts.

It recognizes more resolves, of course.

@c ************
@node 37.2, 37.1, 37.3, Top
@unnumberedsec Version 37.2 changes

New selectors were added: @strong{those facing the caller's left} and
@strong{those facing the caller's right}.  These go along with
@strong{those facing the caller} and @strong{those facing away from the
caller}.  You don't need to type the apostrophe.

@c ************
@node 37.1, 37.0, 37.2, Top
@unnumberedsec Version 37.1 changes

A few bugs relating to 2x1 or 3x1 @strong{wheel the ocean} were fixed.

The calls @strong{slip} and @strong{slither} now recognize that the centers
must be in a miniwave.

One can say either @strong{left chase} or @strong{chase left}.

One can do @strong{concentric diamonds circulate} or  @strong{once removed diamonds circulate}
without saying "diamond" a second time.

The resolver is now @emph{much} less likely to find @strong{dixie grand} getouts
from waves or an 8-chain.

The "curses" mechanism is no longer used under any circumstances under
UNIX-like systems.  Makefiles have been changed accordingly.

@c ************
@node 37.0, 36.81, 37.1, Top
@unnumberedsec Version 37.0 changes

The call @strong{invert} as a tagging call (as in @strong{invert your neighbor})
was moved from C3X to C3A.

There is actually a significant improvement to the reconciler.  Instead of just
inserting calls at a specified point, it can replace a range of calls in the
existing sequence.  In addition to the commands @strong{raise reconcile point}
and @strong{lower reconcile point}, there are new commands @strong{grow reconcile region}
and @strong{shrink reconcile region}.  These manipulate the size of the reconcile
region.  When this region has a nonzero size, it is indicated by two dotted lines
on the display.  The reconciler will search for a call or short sequence of calls that
replaces the region between the dotted lines.

One can do @strong{triple diamonds circulate} without saying "diamond" a second time.

The program is much better about not adding extra text such as
@strong{interlocked diamonds, diamond circulate}.  It will still use it
for things like @strong{interlocked diamonds, diamond as couples 1/4 right}.

The call @strong{wheel and spread} now gives preference to a one-faced line
as its starting setup when it is ambiguous.

The call @strong{triple cross} can be done in certain parallelograms.

The call @strong{single scoot and trade} now has 3 explicit parts.

Certain obscure calls have been moved to the level C4X.  Calls on levels C3X and C4X
are simply not allowed at levels C3 or C4.  The level must be set explicitly.

It is now permissible for the 2nd and 4th parts of the call @strong{reset} to be
be done as a partner hinge instead of an arm turn.

The program has a somewhat better idea about what is supposed to happen on a
@strong{run the wheel} in a distorted setup.

The printing of commas in things like @strong{initially phantom tandem} is more sensible.

@c ************
@node 36.81, 36.8, 37.0, Top
@unnumberedsec Version 36.81 changes

The call @strong{invert} as a tagging call (as in @strong{invert your neighbor})
was moved from C2 to C3X.  At had been at C2 for over 11 years.  I have no idea why.

Certain cases of @strong{phantom tandem strut right} were fixed.

The @strong{phantom tandem} family of calls expands to a 4x4 if
possible, or a 2x8 if that fails, or a 1x16 if that fails.  It used
to accept a 2x6 without expanding to a 2x8.  For example it used to be possible
to call a @strong{phantom tandem double play} in a 2x6.  You must now say
@strong{2x6 matrix phantom tandem double play}.

The @strong{who's on 1st} family of calls was renamed to
@strong{who's on 1st}, @strong{who's on 2nd}, @strong{who's on 3rd}, and @strong{who's on 4th}.
The last of these may also be called @strong{who's at home}.  The old spellings
such as @strong{who's on 1st, #1 couple go} are no longer supported.  The action of this
call is based on location in the square, not original couple number, so a designation
such as "#1 couple" is not appropriate.

Below the C1 level, the call @strong{cycle and wheel} won't allow the @strong{split recycle} variety
of recycle.

The tagging call @strong{chase the tag} was added, so you can say either
@strong{chase your leader} or @strong{chase the tag your leader}.
There were already the plain calls @strong{chase the tag} and @strong{chase the tag N/4}.
What was added is the use of @strong{chase the tag} as an <ATC> call.

A bug in certain cases of @strong{checkpoint} was fixed.

@c ************
@node 36.8, 36.7, 36.81, Top
@unnumberedsec Version 36.8 changes

New meta-concepts: @strong{double echo}, @strong{triple echo}, and
@strong{quadruple echo}.

New concepts: @strong{3x3 concentric}, @strong{4x4 concentric}, 
@strong{3x3 cross concentric}, @strong{4x4 cross concentric}.

The designator @strong{some} may be used with concepts of the
@strong{<anyone> are as couples} variety, if the facing directions make
it clear who are involved.  For example, one can use @strong{some are
couples threesome, swing thru} from a suitable tidal line.

The calls @strong{1/2 here comes the judge} and @strong{1/2 sock it to me}
now leave the 3 non-active people on a column that is congruent to their
starting line.  When done from a tidal one-faced line, these will leave
a column of 6 in the center.

The resolver should produce far fewer @strong{dixie grand} getouts from waves or
8-chains.  The reconciler will not add @strong{circulate}, @strong{extend},
or similar things to the end of the sequence.  Also, if the ending position
of a reconcile is a squared set, it will be at home.

When a @strong{cast off N/4} is interrupted for any reason (for example, an explicit
interruption, or some part of it is done with a concept such as @strong{as couples}),
the casting direction will be re-evaluated when the call is resumed.  That is, if
the cast is "pushy", the centers will be re-evaluated for the push.

Concepts such as @strong{cross concentric} should not be used with
meta-concepts that cause it to be applied multiple times, as in
@strong{initially stable cross concentric mix}.  Doing so causes the
dancers to do the centers vs. ends change multiple times, which is
controversial and confusing.  The program will give a warning in such a
case.

More combinations of phantom concepts are permitted.  Either of split
phantom CLW or triple CLW working, may be followed by either
of multiple boxes or split phantom boxes.  Either of split phantom boxes
or multiple boxes working, may be followed by split phantom CLW.

The legal combinations are now:

@example
@group
split phantom C/L/W, split phantom boxes
split phantom C/L/W, triple/quadruple boxes
triple C/L/W working, split phantom boxes
triple C/L/W working, triple/quadruple boxes
split phantom boxes, split phantom C/L/W
multiple boxes working, split phantom C/L/W
@end group
@end example

The program will issue a warning whenever it has to determine who the
@strong{centers} in a 3x1 diamond are.  They are the center diamond.
If those people are designated in some other way, such as @strong{girls},
the warning is not issued.

A bug in @strong{sidetrack} in unusual setups has been fixed.
We apologize to the caller and dancers who were inconvenienced by this.

The inability to do @strong{initially oddly once removed [turn the key]
motivate} has been fixed.

It is now possible to have designated people @strong{pass in}, or similar
things, without saying @strong{do your part}.

The @strong{roll} action after @strong{by golly} has been fixed.

The printing of transcript files (on paper, for those who use this
technology) has been improved.  Some printers can print all the way to the
edge of the page, though most cannot.  On such printers, transcripts used
to be printed all the way to the left edge of the page.  The program now
uses the printer driver's properties to place margins in a sensible way.

Sdtty will now resist being shut down by the system if a sequence is in
progress.  Sd and Sdtty have both interrogated the user ("Do you really
want to abort this sequence?") when the "quit" command is given.
Furthermore, Sd interrogates the user when the "X" is clicked in the
upper-right corner of the window (or the "close" command from the system
menu obtained by clicking the interlocking squares icon in the extreme
upper left), rather than just letting the program be terminated.  Sdtty
now does the same.  Be aware that the Windows (a registered trademark, I
believe) operating system is much less patient with "console
applications" (such as Sdtty) resisting a shutdown than with "windows
applications" (such as Sd) doing so.  If you accidentally click the "X"
in the upper-right corner while a sequence is in progress, Sdtty will
ask "Do you really want to abort this sequence?"  Type "n".  Also, the
system will complain "Windows cannot end this program".  Click "cancel",
and Sdtty will continue.

Sdtty now handles the underscore character correctly on Japanese keyboards.
I thank Sue Curtis and Kiyoshi Kikuchi for tracking this problem down.

@c ************
@node 36.7, 36.64, 36.8, Top
@unnumberedsec Version 36.7 changes

There was a major overhaul in the inner workings of the program, relating
to the handling of "maps" in sdistort.cpp.  A lot of ugly special-case code
was removed.

It is now legal to stack certain combinations of phantom-creating concepts:

@example
@group
split phantom boxes, split phantom C/L/W
split phantom C/L/W, split phantom boxes
split phantom C/L/W, triple/quadruple boxes
@end group
@end example

@strong{once removed turn the key} is illegal in point-to-point diamonds.
The second part, @strong{counter rotate}, is not legal in that setup.

The program can handle meta-concept combinations involving mystic formations,
as in @strong{initially mystic triple boxes}.

New calls: @kbd{in anchor} and @kbd{out anchor}, analogous to
@kbd{left anchor} and @kbd{right anchor}.

@c ************
@node 36.64, 36.63, 36.7, Top
@unnumberedsec Version 36.64 changes

The way numbers are handled was modified.  Numbers can be as high as 36.
The fraction given in the @strong{crazy} concept need not be a multiple
of 1/4.  Fractions can operate on the individual quarters of parts of a
call defined with things like @strong{cast off 3/4}, so that it is
possible to do things like @strong{8/9 remake the wave} or @strong{7/15
swing the fractions} or @strong{17/36 crazy any hand remake}.

It is legal to stack @strong{split phantom CLW} concepts with
@strong{triple boxes} or @strong{quadruple boxes}.  Other combinations,
such as @strong{split phantom lines split phantom columns}
are still forbidden, because they would expand phantoms on top of
each other.

The call @strong{strike out} can be fractionalized, because @strong{detour}
can be fractionalized.

Various bugs were fixed, in such things as @strong{finally 1/2 crazy central
little more}, @strong{1x3 cast off}, @strong{initially checkpoint recoil by sidetrack},
@strong{scatter reach out} from T-bones, @strong{straight central interlocked little},
and @strong{lines [Z axle] thru}.

Collisions that occur on reasonably straightforward @strong{1/2 circulate} calls
will not raise the "take right hands" warning.  This applies to calls like
@strong{tally ho} and @strong{team up}.

More resolves are recognized.

It is permissible to spell the call @strong{lockit} as @strong{lock it}.

The calls @strong{any hand grand 1/4 cross} and @strong{any hand grand 3/4 cross}
have been moved to level C3X.

The concepts @strong{center phantom columns} and @strong{outside phantom columns}
have been moved to level C3.

New concept: @strong{<anyone> in your trapezoid}.  This is typically
used in unsymmetrical setups.

The installation procedure should do a better job of installing on various
varieties of Windows systems.  It reads the registry to determine where to
place startup icons.

@c ************
@node 36.63, 36.62, 36.64, Top
@unnumberedsec Version 36.63 changes

The @strong{solid <fractional> twosome} and @strong{twosome <fractional>
solid} types of concepts can now take fractions that are in eighths.

The @strong{skew <fractional> twosome} concept can be given as
@strong{skew <fractional> skewsome}.  In the other direction the
concept name is still @strong{skewsome <fractional> solid}.

Sdtty no longer erases the part of the display window containing the
previously written sequence when it starts a new sequence.

The call @strong{remake} finally obeys the current definition.  Except
for @strong{remake the thar}, all forms of this call obey a right-hand
rule.  You may say @strong{left remake}, of course.  There is no call
@strong{remake the column} unless @strong{grand} is used.  Otherwise,
it would be a 4-person call, and the phrase @strong{remake the column}
would be misleading.

There are now calls @strong{3X2 reshape} and @strong{3X2 convert}.
It is not necessary to use the ``allow mofications'' mechanism to
get these.

Two new startup options have been added: ``use_magenta'' and
``use_cyan''.  These change the red and blue checker colors to magenta
and cyan, respectively.  This effectively lightens them, so that they
may show up better against a black background.  (The ``pastel_color''
option does the same thing to both colors, but only if the default
girls-are-red and boys-are-blue coloring is in use.)  These two new
options take effect in all cases, and control the colors individually.

At levels C4A and above, a warning will be issued if the
@strong{distorted C/L/W} or @strong{offset C/L/W} concepts are used when
the more specific @strong{Z C/L/W} concepts could be used instead.
Unfortunately, the @strong{Z C/L/W} concepts are not available at lower
levels, so the other, less helpful, concepts need to be used instead.

The fraction given to the @strong{crazy} concept is not required to be
a multiple of 1/4.  One can say, for example, @strong{1/3 crazy the difference}.

An embarrassing bug in the interaction of @strong{crazy} and @strong{fractal}
was fixed.

The calls @strong{<anyone> peel off}, @strong{<anyone> zoom}, and
@strong{<anyone> zing} can be done, without the use of a @strong{do your
part} concept, from setups such as columns.  For example, one can do
@strong{heads star thru; girls peel off}.

A bug in @strong{roll} after @strong{curve in} or @strong{curve out} was fixed.

It is now possible to say @strong{<anyone> start vertical tag} without
the use of a @strong{do your part} concept.

It is now possible to say @strong{<anyone> spread} without the use of a
@strong{do your part} concept, as in @strong{[motivate] and the boys
spread}.  The call @strong{... and spread} has been removed.  Use
@strong{<anything> and spread}.

Alternate spellings @strong{jaywalk}, @strong{inroll circulate}, and
@strong{outroll circulate} have been provided.

A bug in the @strong{reconcile} command, looking for Left Allemande getouts,
has been fixed.  It will demand a promenade distance of zero.

A bug in @strong{twisted centers run} and @strong{twisted ends run} has
been fixed.

A bug in @strong{ends percolate} has been fixed.

The program should do a better job of not showing things like
@strong{detract [ignore everyone, line to line but [???]]} when doing
"pick random call" and similar searches.

@c ************
@node 36.62, 36.61, 36.63, Top
@unnumberedsec Version 36.62 changes

The calls @strong{cast back} and @strong{cross cast back} can be done
from a wider variety of places, and can be done with concepts like
@strong{tandem}.

The @strong{pick random call} command can be given after a call with an
@strong{<anything>} subcall, and it will search for calls to substitute
for the @strong{<anything>}.  For example, one can type @strong{breaker
<anything>} followed by @strong{pick random call}.

There is a command (actually a concept, if you care) @strong{<anyone>
move in and} that can be given when the formation is on squared-set
spots.  The following call will be done as if the sequence had been
started by having those people move in to the middle.  This replaces the
old ``heads press ahead; heads pass the ocean'' usage.  For example:
@example
@group
    just as they are
    all 4 couples right and left thru
    sides move in and split dixie diamond
@end group
@end example

The calls @strong{press in}, @strong{press out}, @strong{curve in}, and
@strong{curve out} were added.

The calls @strong{here comes the judge} and @strong{sock it to me} have
been improved and made more consistent in the presence of phantoms.

The call @strong{spin the top} will not be presented as a resolve if the
formations is a 2-faced line.  @strong{Fan the top} will continue to be
presented.

The call @strong{single ferris wheel} has been improved.

A bug in @strong{roll} after @strong{trade the deucey} was fixed.

An bug leading to improper orientation of the setup after certain
pathological operations was fixed.

More @strong{right and left grand} and @strong{left allemande} getouts
are recognized when in blocks.

The @strong{recenter} operation can handle 1x10 and 1x12 setups.

A bug was fixed involving clipboard @strong{cut} and @strong{paste}
operations on squared-set spots.

@c ************
@node 36.61, 36.60, 36.62, Top
@unnumberedsec Version 36.61 changes

A mechanism has been added to facilitate changing from ``old style''
file names to ``new style''.  The new style file names are names like
``13aug05_c1.txt'' or ``sequence_c1.txt''.  The old style file names
were like ``13aug05.c1'' or ``sequence.c1''.  The new names are better
suited for use on modern operating systems, such as Windows 95 or later,
but most session files specify the legacy names.  If you want to change
your session file to specify the new names, give the command
@strong{change to new style filename} right after starting the program
(@code{Sdtty} or @code{Sd}.)  See the manual or the FAQ file for further
details.

The definitions of @strong{strut left}, @strong{strut right and left},
and @strong{strut left and right} were fixed.  The initial pass thru for
the centers is @i{always} right shoulder.

A number of bugs (a few of which could cause a crash) were fixed in the
following areas.  It's not worth going into the details---they are all
quite obscure.  If you recognize your bug in this list, it's been fixed.

@example
@group
    "keep all pictures"
    twist the line
    change lanes
    nuclear reaction
    prefer the <anyone>, out roll circulate
    cut the interlocked diamond
    stretch, and stretched setup, with 3x1 triangles
    3x1 and 1x3 checkmate
    <ATC> and scatter reaction
    grand chain 8
@end group
@end example

@c ************
@node 36.60, 36.59, 36.61, Top
@unnumberedsec Version 36.60 changes

The program can do a few more rewinds.  It does not do rewinds by
the trial-and-error method.

The program can do phantom setup concepts stacked after couples/tandem
concepts (e.g. @strong{phantom as couples split phantom lines})
reasonably well.

The program can do @strong{prefer the <anyone>} on both @strong{in roll circulate}
and @strong{out roll circulate}.

The program can do a better job of @strong{triple star thru}.  The call
is fractionalizable.

The program can do @strong{single veer left} and @strong{single veer right}.
Callerlab allows these calls to be used without the word "single" when they
are unambiguous.  @code{Sd} does not.

The program can do @strong{single file all 4 ladies chain}.

The calls @strong{<ATC> chain thru and scatter} have been moved from C4 to C3.

The program can do a better job of @strong{plan ahead} when the centers
are phantoms.  Specifically, it can use the @strong{assume facing lines}
command to tell it how the call should be done.

The program can identify @strong{beaus}, @strong{belles},
@strong{leads}, and @strong{trailers} in C1 phantoms and collided
diamonds.

The program does a better job of showing individual screenfuls of choices
when '?' or '!' is typed.  It used to get confused by very long lines.

@c ************
@node 36.59, 36.58, 36.60, Top
@unnumberedsec Version 36.59 changes

New call: @strong{<anyone> run 1-1/2}.  Without this call, the use of
the @strong{1-1/2} concept on the call @strong{run} would cause the
designator (e.g. @strong{centers}) to be re-evaluated after the first
@strong{run}.  This would lead to things like @strong{centers run 1-1/2}
behaving in a nonintuitive way.  We believe that the more
straightforward way is not to re-evaluate in a situation like this.
This new call does it that way.

The behavior of @strong{roll} after @strong{zip code} and
@strong{squeeze} was repaired.

The @strong{half and half} concept has been extended to any fractions, including fractions
that do not add up to 1.  It is entered as in this example:
@example
@group
    1/2 and 2/3
    contour the line
    remake the wave
@end group
@end example

This takes two calls.  Do the
first fraction of the first call, and then the last fraction of the second
call.  So, in this example, do the first 1/2 of @strong{contour the line} and
then the last 2/3 of @strong{remake the wave}.

@c ************
@node 36.58, 36.57, 36.59, Top
@unnumberedsec Version 36.58 changes

The handling of alamo rings is improved.  That is, after something like
@strong{all 8 spin the top; girls run; as couples quarter right}, one
can have the heads @strong{press ahead} and do something.

The handling of very complex interacting meta-concepts is improved,
as in @strong{initially middle 1/2 centers, [contour the line] motivate}.
Callers continue to come up with amazingly intricate cases.

The program now recognizes that the @strong{crazy} concept always requires
a split of some sort, so that, for example, @strong{1/2 crazy you all}
is illegal from columns.

The sample "sd.ini" files have been removed.  Assuming that you don't
have such a file, issue the command @strong{initialize session file} to
create one.

@c ************
@node 36.57, 36.56, 36.58, Top
@unnumberedsec Version 36.57 changes

New concept: @strong{half and half}.  This takes two calls.  Do the
first half of the first call, and then the second half of the second
call.

The behavior of @strong{roll} after @strong{percolate} and @strong{stampede}
was repaired.

The definitions of @strong{breaker} and @strong{detract} were repaired.
In both calls, the first part for the centers is @strong{box counter
rotate}, not @strong{box circulate}.  This would only make a difference
in things like @strong{breaker 3 but interrupt after the 1st part with
inrigger in roll circulate}.

@c ************
@node 36.56, 36.55, 36.57, Top
@unnumberedsec Version 36.56 changes

The program is better about doing intricate meta-concepts, such as
@strong{initially finally sandwich reverse order flip your neighbor
around settle back}, or @strong{finally contour the line around recoil}.

@c ************
@node 36.55, 36.54, 36.56, Top
@unnumberedsec Version 36.55 changes

The program is better about stepping to a wave on @strong{swing and circle}
in the presence of phantoms.

A bug that might have made the program slow to start on Linux was fixed.

@c ************
@node 36.54, 36.53, 36.55, Top
@unnumberedsec Version 36.54 changes

The program handles "curried metaconcepts".  This means that one can
do things like @strong{finally checkpoint recycle by 1/4 thru}.  The
@strong{checkpoint} concept normally takes two subject calls---@strong{recycle}
and @strong{1/4 thru} in this case.  When the concept is used under a metaconcept
(@strong{finally} in this case), the metaconcept applies only to the second
call.  The first call is treated as though it is an integral part of the
concept.  That is, the concept is treated as though it were @strong{checkpoint
recycle by}.  (The act of putting an argument into a two-argument function,
thereby turning it into a one-argument function, is known in logic theory
as "currying".)  So the whole utterance is treated as though it were
@strong{finally (checkpoint recycle by) 1/4 thru}.  Everyone casts 1/4 by the
right, followed by @strong{checkpoint recycle by turn 1/2 by the left}.

The concepts with which this works are @strong{checkpoint}, @strong{on your own},
and @strong{own the <anyone>}.

A bug causing phantom spots to disappear in certain cases of
@strong{spin chain the line} was fixed.

The program can now handle @strong{clover and <anything>} or
@strong{wheel and <anything>} from alamo rings in which couples
facing out can be identified.

A bug in @strong{<anything> the windmill} was fixed.

The program handles "1/2 crazy Z's" correctly.

The program is more accurate in the handling of the designators "center
line" and "center 1x4".

Some changes were made in the way the "curses" package is used, because
of a possible bug in which the "---more---" mechanism doesn't work properly
when a question mark is typed.

The linux version now compiled with Gcc 3.2.3, and uses "libgpm".

@c ************
@node 36.53, 36.52, 36.54, Top
@unnumberedsec Version 36.53 changes

New designators: @strong{center column/line/wave of 6}.  These are
used in a general 3x1 diamond (or a tidal setup.)  You can also use
the designator @strong{center 1x6}.

New concept:  @strong{same sex disconnected}.  This is used with a single call.
Each disconnected sex does that call.

@c ************
@node 36.52, 36.5, 36.53, Top
@unnumberedsec Version 36.52 changes

A bug in @strong{cross cycle} was fixed.  The last part is @strong{roll},
just as for @strong{recycle}.

A bug in version 36.5, arising from the cache file change, was fixed.

A bug in the handling of @strong{echo} with @strong{crazy} was fixed.

The program can do @strong{rims trade back} and @strong{hubs trade back}
from a thar and from a wave between two miniwaves.  It can also switch
between these two setups with appropriate operations such as @strong{1/2
tow truck}.

@c ************
@node 36.5, 36.4, 36.52, Top
@unnumberedsec Version 36.5 changes

In accordance with the current Callerlab definition,
the call @strong{remake the column} is a 4-person call unless the
@strong{grand} modifier is used.

The program can do @strong{parallelogram split phantom lines}
from suitably populated 4x5's and 4x6's.

The setup resulting from things like @strong{centers reach out} in
a butterfly is now a 3x4 matrix "H".

The program can handle T-boned @strong{pass the top}.

The program can handle @strong{<anyone> trade} from 4x4's, so, for example,
you can create blocks with things like @strong{girls press ahead} followed
by @strong{girls trade}.

New designators, legal in normal columns:
@example
@group
first 1
first 2
first 3
last 1
last 2
last 3
@end group
@end example

Example:  @strong{first 3 are tandems of 3 peel and trail}

These may not be the exact words that you should use.

More new designators, legal in facing lines or back-to-back
lines.  They are included only for completeness.  I am not aware that
callers actually use these designators:
@example
@group
leftmost 1
leftmost 2
leftmost 3
rightmost 1
rightmost 2
rightmost 3
@end group
@end example

An embarrassing bug was found in the handling of cache files on Linux.
It did not affect Windows users.  We apologize to the caller (who will
remain anonymous, but whose web site this program is distributed from)
who was inconvenienced by this.

@c ************
@node 36.4, 36.3, 36.5, Top
@unnumberedsec Version 36.4 changes

The program can do a better job of @strong{twisted <anyone> run}.

It can handle @strong{finally twisted clover the horn}.

The calls @strong{first couple go left, next go left} and
@strong{first couple go right, next go right} have had @strong{keep walking}
added to their names, and they go to a promenade position.  (They used to
go to a 2-faced line.)  We believe that these calls are imprecise, and
that they should be followed by something involving a promenade.

An extremely peculiar bug involving @strong{anchor the <anyone>, 3x1
triangle circulate} was fixed.

The program is more careful about not allowing @strong{pass thru} unless
people are actually facing, or some phantom or matrix concept was used.

In response to a recent discussion on the "challenge-sd" mailing list,
the call @strong{grand extend} was improved to handle all cases of N/8
tags.  Users are nevertheless warned that this is not really a call.
It is simply something that was put into the database in response to
the fact that callers occasionally use @strong{extend} in this way.

@c ************
@node 36.3, 36.1, 36.4, Top
@unnumberedsec Version 36.3 changes

Some call levels were changed in accordance with recent Callerlab decisions.
Reverse Flip and Cut the Diamond are C2.  Cross Extend is C1.  Substitute is C1.

The @strong{left orbitboard} concept was implemented.

A new startup option was added:  tab_changes_focus.
This applies to @code{Sd} only.  Windows programs normally use the tab key
to move keyboard focus around among the active windows in some fixed order,
and the shift-tab key to move in the opposite order.  This change of focus
is nearly useless in @code{Sd}, because the keyboard focus is almost always
on the text input region.  Therefore, the default behavior of @code{Sd} is to
have the tab key instead perform the same completion function as the escape key,
just as @code{Sdtty} does.  (The shift-tab key still moves focus in the backwards
order.)  This option re-enables the conventional Windows
meaning of the tab key.

The ability to do "clover and <anything>" or "<anyone> cloverleaf" was improved.

The ability to do @strong{exchange the diamonds} in the presence of phantoms
was improved.

The handling of the @strong{twin phantom 1/4 tags} and @strong{twin phantom diamonds}
concepts was improved.

Reconciles will now reject anything that has an extend or circulate.

@c ************
@node 36.1, 36.0, 36.3, Top
@unnumberedsec Version 36.1 changes

A new startup option was added:  print_length, followed by a number.
This sets the point at which lines will be broken.  It may be used
either as a command-line option (with a hyphen)

@example
@group
sdtty -print_length 68
@end group
@end example

or placed in the sd.ini file:

@example
@group
[Options]
print_length 68
@end group
@end example

The ability to do @strong{Jay Walk} from C1 Phantom formations was imroved.

The ability to fractionalize things, as in @strong{finally snag the boys outpost},
was improved.

New concepts: quintuple/sextuple C/L/W/B, quintuple/sextuple 1x4s.

Improved ability to do matrix expansions in compound calls, for example,
@strong{heads split catch [triple boxes recoil] 4}.

Improved ability to handle the @strong{matrix} concept.

The startup option "-color_by_couple_ygrb" was added.

Various improvements and bug fixes.

@c ************
@node 36.0, 35.1, 36.1, Top
@unnumberedsec Version 36.0 changes

The program is now licensed under the GNU General Public License,
and is distributed with source files.

This may impose a slight additional burden on you, the user.  You are,
of course, not required to download the source files when you obtain a
copy of @code{Sd} from the web page.  If you want to make the program
available to someone else, and you do it by giving them the URL for
downloading, that is OK.  However, if you distribute the program by
other means, such as giving someone a copy that you have placed on a CD
or diskette, you must either place the source files on the disk also, or
tell the person the URL from which they can download them.

Also, if you redistribute @code{Sd} on a web page or similar mechanism,
you must make the source files available there.

New concepts: mystic wing, invert mystic wing, other wing.

@c ************
@node 35.1, 35.0, 36.0, Top
@unnumberedsec Version 35.1 changes

The definition of @strong{recycle} has been changed.  The third part is
@strong{roll}.  I thank the Callerlab Challenge Committee for fixing
this.

The program can handle @strong{slim down} from arbitrary (legal) 4x4
setups.

The program can handle @strong{1/2 circulate} (and therefore can handle
@strong{tally ho}) from C1 phantom setups.  I have no idea why this was
overlooked for so long.

The program can handle the ``pushy'' cast in @strong{peel chain thru} from
a left-handed 3/4 tag.

The bug in the @strong{pick 8 person level call} command was fixed.

The concept @strong{twin phantom bones} has been added.  It is the same as
@strong{twin phantom I's}.

The concepts @strong{twin phantom bats} and @strong{twin phantom riggers}
have been added.  They are the same.

The program can do @strong{funny square thru} better.  I thank the Tech Squares
C2 class for making this fix necessary.

Some horrible bugs were fixed.  I thank the Tech Squares C2 class for helping
me find them.

@c ************
@node 35.0, , 35.1, Top
@unnumberedsec Version 35.0 changes

A bug that may have caused printed files to appear as garbage was fixed.
The files themselves would not have been corrupted, and printing by other means
would have worked.

A bug in the @kbd{anchor} concept was fixed.

The program is now compiled with Gcc.

@bye
